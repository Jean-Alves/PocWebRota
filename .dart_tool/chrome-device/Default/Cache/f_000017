define(['dart_sdk', 'packages/flutter/src/widgets/widget_span.dart', 'packages/flutter_modular/src/core/errors/errors.dart', 'packages/flutter_modular/src/core/interfaces/disposable.dart', 'packages/flutter/src/foundation/change_notifier.dart', 'packages/triple/src/memento_mixin.dart', 'packages/flutter/src/foundation/print.dart', 'packages/flutter_modular/src/core/models/modular_arguments.dart', 'packages/flutter_modular/src/core/models/custom_transition.dart', 'packages/flutter/src/animation/listener_helpers.dart', 'packages/flutter_modular/src/presenters/transitions/page_transition.dart', 'packages/flutter/src/material/icon_button.dart', 'packages/characters/src/extensions.dart', 'packages/flutter/src/cupertino/route.dart', 'packages/flutter/src/material/page.dart', 'packages/flutter/src/foundation/key.dart', 'packages/flutter_modular/src/core/interfaces/modular_navigator_interface.dart', 'packages/flutter/src/material/app.dart', 'packages/flutter/src/cupertino/app.dart'], (function load__packages__flutter_modular__src__presenters__widgets__widget_module_dart(dart_sdk, packages__flutter__src__widgets__widget_span$46dart, packages__flutter_modular__src__core__errors__errors$46dart, packages__flutter_modular__src__core__interfaces__disposable$46dart, packages__flutter__src__foundation__change_notifier$46dart, packages__triple__src__memento_mixin$46dart, packages__flutter__src__foundation__print$46dart, packages__flutter_modular__src__core__models__modular_arguments$46dart, packages__flutter_modular__src__core__models__custom_transition$46dart, packages__flutter__src__animation__listener_helpers$46dart, packages__flutter_modular__src__presenters__transitions__page_transition$46dart, packages__flutter__src__material__icon_button$46dart, packages__characters__src__extensions$46dart, packages__flutter__src__cupertino__route$46dart, packages__flutter__src__material__page$46dart, packages__flutter__src__foundation__key$46dart, packages__flutter_modular__src__core__interfaces__modular_navigator_interface$46dart, packages__flutter__src__material__app$46dart, packages__flutter__src__cupertino__app$46dart) {
  'use strict';
  const core = dart_sdk.core;
  const _interceptors = dart_sdk._interceptors;
  const _internal = dart_sdk._internal;
  const _js_helper = dart_sdk._js_helper;
  const async = dart_sdk.async;
  const dart = dart_sdk.dart;
  const dartx = dart_sdk.dartx;
  const widget_inspector = packages__flutter__src__widgets__widget_span$46dart.src__widgets__widget_inspector;
  const framework = packages__flutter__src__widgets__widget_span$46dart.src__widgets__framework;
  const pages = packages__flutter__src__widgets__widget_span$46dart.src__widgets__pages;
  const navigator = packages__flutter__src__widgets__widget_span$46dart.src__widgets__navigator;
  const transitions = packages__flutter__src__widgets__widget_span$46dart.src__widgets__transitions;
  const router$ = packages__flutter__src__widgets__widget_span$46dart.src__widgets__router;
  const errors = packages__flutter_modular__src__core__errors__errors$46dart.src__core__errors__errors;
  const disposable = packages__flutter_modular__src__core__interfaces__disposable$46dart.src__core__interfaces__disposable;
  const change_notifier = packages__flutter__src__foundation__change_notifier$46dart.src__foundation__change_notifier;
  const store = packages__triple__src__memento_mixin$46dart.src__store;
  const print = packages__flutter__src__foundation__print$46dart.src__foundation__print;
  const modular_arguments = packages__flutter_modular__src__core__models__modular_arguments$46dart.src__core__models__modular_arguments;
  const custom_transition = packages__flutter_modular__src__core__models__custom_transition$46dart.src__core__models__custom_transition;
  const animation = packages__flutter__src__animation__listener_helpers$46dart.src__animation__animation;
  const page_transition = packages__flutter_modular__src__presenters__transitions__page_transition$46dart.src__presenters__transitions__page_transition;
  const material = packages__flutter__src__material__icon_button$46dart.src__material__material;
  const extensions = packages__characters__src__extensions$46dart.src__extensions;
  const route = packages__flutter__src__cupertino__route$46dart.src__cupertino__route;
  const page = packages__flutter__src__material__page$46dart.src__material__page;
  const key = packages__flutter__src__foundation__key$46dart.src__foundation__key;
  const modular_navigator_interface = packages__flutter_modular__src__core__interfaces__modular_navigator_interface$46dart.src__core__interfaces__modular_navigator_interface;
  const app$ = packages__flutter__src__material__app$46dart.src__material__app;
  const app$0 = packages__flutter__src__cupertino__app$46dart.src__cupertino__app;
  var widget_module = Object.create(dart.library);
  var navigation_listener = Object.create(dart.library);
  var modular_state = Object.create(dart.library);
  var modular_app = Object.create(dart.library);
  var wildcard_route = Object.create(dart.library);
  var module_route = Object.create(dart.library);
  var transitions$ = Object.create(dart.library);
  var modular_route_impl = Object.create(dart.library);
  var child_route = Object.create(dart.library);
  var route_guard = Object.create(dart.library);
  var router_outlet_delegate = Object.create(dart.library);
  var modular_route_information_parser = Object.create(dart.library);
  var modular_page = Object.create(dart.library);
  var custom_navigator = Object.create(dart.library);
  var modular_router_delegate = Object.create(dart.library);
  var modular_impl = Object.create(dart.library);
  var modular_interface = Object.create(dart.library);
  var modular_base = Object.create(dart.library);
  var bind$ = Object.create(dart.library);
  var inject = Object.create(dart.library);
  var module = Object.create(dart.library);
  var modular_route = Object.create(dart.library);
  var flutter_modular = Object.create(dart.library);
  var $runtimeType = dartx.runtimeType;
  var $add = dartx.add;
  var $where = dartx.where;
  var $clear = dartx.clear;
  var $addAll = dartx.addAll;
  var $containsKey = dartx.containsKey;
  var $_get = dartx._get;
  var $firstWhere = dartx.firstWhere;
  var $remove = dartx.remove;
  var $contains = dartx.contains;
  var $join = dartx.join;
  var $_set = dartx._set;
  var $keys = dartx.keys;
  var $forEach = dartx.forEach;
  var $isEmpty = dartx.isEmpty;
  var $hashCode = dartx.hashCode;
  var $length = dartx.length;
  var $last = dartx.last;
  var $map = dartx.map;
  var $toList = dartx.toList;
  var $sort = dartx.sort;
  var $replaceFirst = dartx.replaceFirst;
  var $isNotEmpty = dartx.isNotEmpty;
  var $replaceAll = dartx.replaceAll;
  var $substring = dartx.substring;
  var $split = dartx.split;
  var $removeLast = dartx.removeLast;
  var $values = dartx.values;
  var $indexWhere = dartx.indexWhere;
  dart._checkModuleNullSafetyMode(true);
  var T$ = {
    JSArrayOfString: () => (T$.JSArrayOfString = dart.constFn(_interceptors.JSArray$(core.String)))(),
    JSArrayOfModularRoute: () => (T$.JSArrayOfModularRoute = dart.constFn(_interceptors.JSArray$(modular_route.ModularRoute)))(),
    BindOfObject: () => (T$.BindOfObject = dart.constFn(bind$.Bind$(core.Object)))(),
    JSArrayOfBindOfObject: () => (T$.JSArrayOfBindOfObject = dart.constFn(_interceptors.JSArray$(T$.BindOfObject())))(),
    LinkedMapOfType$dynamic: () => (T$.LinkedMapOfType$dynamic = dart.constFn(_js_helper.LinkedMap$(core.Type, dart.dynamic)))(),
    JSArrayOfModule: () => (T$.JSArrayOfModule = dart.constFn(_interceptors.JSArray$(module.Module)))(),
    BindOfObjectTobool: () => (T$.BindOfObjectTobool = dart.constFn(dart.fnType(core.bool, [T$.BindOfObject()])))(),
    VoidToBindEmpty: () => (T$.VoidToBindEmpty = dart.constFn(dart.fnType(bind$.BindEmpty, [])))(),
    StoreOfObject$Object: () => (T$.StoreOfObject$Object = dart.constFn(store.Store$(core.Object, core.Object)))(),
    TypeAnddynamicTovoid: () => (T$.TypeAnddynamicTovoid = dart.constFn(dart.fnType(dart.void, [core.Type, dart.dynamic])))(),
    VoidTovoid: () => (T$.VoidTovoid = dart.constFn(dart.fnType(dart.void, [])))(),
    BuildContextAndModularArgumentsToWidget: () => (T$.BuildContextAndModularArgumentsToWidget = dart.constFn(dart.fnType(framework.Widget, [framework.BuildContext, modular_arguments.ModularArguments])))(),
    ObjectN: () => (T$.ObjectN = dart.constFn(dart.nullable(core.Object)))(),
    FnAndDurationAndRouteSettingsToPageRouteBuilderOfT: () => (T$.FnAndDurationAndRouteSettingsToPageRouteBuilderOfT = dart.constFn(dart.gFnType(T => [pages.PageRouteBuilder$(T), [T$.BuildContextAndModularArgumentsToWidget(), core.Duration, navigator.RouteSettings]], T => [T$.ObjectN()])))(),
    FnAndDurationAndRouteSettingsToPageRouteBuilderOfT$1: () => (T$.FnAndDurationAndRouteSettingsToPageRouteBuilderOfT$1 = dart.constFn(dart.gFnType(T => [pages.PageRouteBuilder$(T), [T$.BuildContextAndModularArgumentsToWidget(), core.Duration, navigator.RouteSettings]], T => [T$.ObjectN()])))(),
    FnAndDurationAndRouteSettingsToPageRouteBuilderOfT$2: () => (T$.FnAndDurationAndRouteSettingsToPageRouteBuilderOfT$2 = dart.constFn(dart.gFnType(T => [pages.PageRouteBuilder$(T), [T$.BuildContextAndModularArgumentsToWidget(), core.Duration, navigator.RouteSettings]], T => [T$.ObjectN()])))(),
    FnAndDurationAndRouteSettingsToPageRouteBuilderOfT$3: () => (T$.FnAndDurationAndRouteSettingsToPageRouteBuilderOfT$3 = dart.constFn(dart.gFnType(T => [pages.PageRouteBuilder$(T), [T$.BuildContextAndModularArgumentsToWidget(), core.Duration, navigator.RouteSettings]], T => [T$.ObjectN()])))(),
    FnAndDurationAndRouteSettingsToPageRouteBuilderOfT$4: () => (T$.FnAndDurationAndRouteSettingsToPageRouteBuilderOfT$4 = dart.constFn(dart.gFnType(T => [pages.PageRouteBuilder$(T), [T$.BuildContextAndModularArgumentsToWidget(), core.Duration, navigator.RouteSettings]], T => [T$.ObjectN()])))(),
    FnAndDurationAndRouteSettingsToPageRouteBuilderOfT$5: () => (T$.FnAndDurationAndRouteSettingsToPageRouteBuilderOfT$5 = dart.constFn(dart.gFnType(T => [pages.PageRouteBuilder$(T), [T$.BuildContextAndModularArgumentsToWidget(), core.Duration, navigator.RouteSettings]], T => [T$.ObjectN()])))(),
    FnAndDurationAndRouteSettingsToPageRouteBuilderOfT$6: () => (T$.FnAndDurationAndRouteSettingsToPageRouteBuilderOfT$6 = dart.constFn(dart.gFnType(T => [pages.PageRouteBuilder$(T), [T$.BuildContextAndModularArgumentsToWidget(), core.Duration, navigator.RouteSettings]], T => [T$.ObjectN()])))(),
    FnAndDurationAndRouteSettingsToPageRouteBuilderOfT$7: () => (T$.FnAndDurationAndRouteSettingsToPageRouteBuilderOfT$7 = dart.constFn(dart.gFnType(T => [pages.PageRouteBuilder$(T), [T$.BuildContextAndModularArgumentsToWidget(), core.Duration, navigator.RouteSettings]], T => [T$.ObjectN()])))(),
    FnAndDurationAndRouteSettingsToPageRouteBuilderOfT$8: () => (T$.FnAndDurationAndRouteSettingsToPageRouteBuilderOfT$8 = dart.constFn(dart.gFnType(T => [pages.PageRouteBuilder$(T), [T$.BuildContextAndModularArgumentsToWidget(), core.Duration, navigator.RouteSettings]], T => [T$.ObjectN()])))(),
    FnAndDurationAndRouteSettingsToPageRouteBuilderOfT$9: () => (T$.FnAndDurationAndRouteSettingsToPageRouteBuilderOfT$9 = dart.constFn(dart.gFnType(T => [pages.PageRouteBuilder$(T), [T$.BuildContextAndModularArgumentsToWidget(), core.Duration, navigator.RouteSettings]], T => [T$.ObjectN()])))(),
    FnAndDurationAndRouteSettingsToPageRouteBuilderOfT$10: () => (T$.FnAndDurationAndRouteSettingsToPageRouteBuilderOfT$10 = dart.constFn(dart.gFnType(T => [pages.PageRouteBuilder$(T), [T$.BuildContextAndModularArgumentsToWidget(), core.Duration, navigator.RouteSettings]], T => [T$.ObjectN()])))(),
    BuildContextToWidget: () => (T$.BuildContextToWidget = dart.constFn(dart.fnType(framework.Widget, [framework.BuildContext])))(),
    ListOfString: () => (T$.ListOfString = dart.constFn(core.List$(core.String)))(),
    IdentityMapOfString$ListOfString: () => (T$.IdentityMapOfString$ListOfString = dart.constFn(_js_helper.IdentityMap$(core.String, T$.ListOfString())))(),
    IdentityMapOfString$String: () => (T$.IdentityMapOfString$String = dart.constFn(_js_helper.IdentityMap$(core.String, core.String)))(),
    AnimationOfdouble: () => (T$.AnimationOfdouble = dart.constFn(animation.Animation$(core.double)))(),
    BuildContextAndAnimationOfdoubleAndAnimationOfdoubleToWidget: () => (T$.BuildContextAndAnimationOfdoubleAndAnimationOfdoubleToWidget = dart.constFn(dart.fnType(framework.Widget, [framework.BuildContext, T$.AnimationOfdouble(), T$.AnimationOfdouble()])))(),
    BuildContextAndAnimationOfdoubleAndAnimationOfdouble__ToFadeTransition: () => (T$.BuildContextAndAnimationOfdoubleAndAnimationOfdouble__ToFadeTransition = dart.constFn(dart.fnType(transitions.FadeTransition, [framework.BuildContext, T$.AnimationOfdouble(), T$.AnimationOfdouble(), framework.Widget])))(),
    JSArrayOfModularPage: () => (T$.JSArrayOfModularPage = dart.constFn(_interceptors.JSArray$(modular_page.ModularPage)))(),
    ListOfModularPage: () => (T$.ListOfModularPage = dart.constFn(core.List$(modular_page.ModularPage)))(),
    StringAndModuleTovoid: () => (T$.StringAndModuleTovoid = dart.constFn(dart.fnType(dart.void, [core.String, module.Module])))(),
    RouteAnddynamicTobool: () => (T$.RouteAnddynamicTobool = dart.constFn(dart.fnType(core.bool, [navigator.Route, dart.dynamic])))(),
    VoidToString: () => (T$.VoidToString = dart.constFn(dart.fnType(core.String, [])))(),
    StringTodynamic: () => (T$.StringTodynamic = dart.constFn(dart.fnType(dart.dynamic, [core.String])))(),
    ModularRouteToModularRoute: () => (T$.ModularRouteToModularRoute = dart.constFn(dart.fnType(modular_route.ModularRoute, [modular_route.ModularRoute])))(),
    ModularRouteAndModularRouteToint: () => (T$.ModularRouteAndModularRouteToint = dart.constFn(dart.fnType(core.int, [modular_route.ModularRoute, modular_route.ModularRoute])))(),
    ModularRouteTobool: () => (T$.ModularRouteTobool = dart.constFn(dart.fnType(core.bool, [modular_route.ModularRoute])))(),
    VoidToModularRoute: () => (T$.VoidToModularRoute = dart.constFn(dart.fnType(modular_route.ModularRoute, [])))(),
    JSArrayOfRouteGuard: () => (T$.JSArrayOfRouteGuard = dart.constFn(_interceptors.JSArray$(route_guard.RouteGuard)))(),
    VoidToWidget: () => (T$.VoidToWidget = dart.constFn(dart.fnType(framework.Widget, [])))(),
    WidgetTodynamic: () => (T$.WidgetTodynamic = dart.constFn(dart.fnType(dart.dynamic, [framework.Widget])))(),
    IdentityMapOfint$Completer: () => (T$.IdentityMapOfint$Completer = dart.constFn(_js_helper.IdentityMap$(core.int, async.Completer)))(),
    GlobalKeyOfNavigatorState: () => (T$.GlobalKeyOfNavigatorState = dart.constFn(framework.GlobalKey$(navigator.NavigatorState)))(),
    IdentityMapOfString$ListOfModularPage: () => (T$.IdentityMapOfString$ListOfModularPage = dart.constFn(_js_helper.IdentityMap$(core.String, T$.ListOfModularPage())))(),
    ValueKeyOfString: () => (T$.ValueKeyOfString = dart.constFn(key.ValueKey$(core.String)))(),
    StringN: () => (T$.StringN = dart.constFn(dart.nullable(core.String)))(),
    ValueKeyOfStringN: () => (T$.ValueKeyOfStringN = dart.constFn(key.ValueKey$(T$.StringN())))(),
    ModularRouteToModularPage: () => (T$.ModularRouteToModularPage = dart.constFn(dart.fnType(modular_page.ModularPage, [modular_route.ModularRoute])))(),
    JSArrayOfType: () => (T$.JSArrayOfType = dart.constFn(_interceptors.JSArray$(core.Type)))(),
    RouterOfModularRoute: () => (T$.RouterOfModularRoute = dart.constFn(router$.Router$(modular_route.ModularRoute)))(),
    VoidToMaterialApp: () => (T$.VoidToMaterialApp = dart.constFn(dart.fnType(app$.MaterialApp, [])))(),
    VoidToCupertinoApp: () => (T$.VoidToCupertinoApp = dart.constFn(dart.fnType(app$0.CupertinoApp, [])))(),
    IdentityMapOfString$Module: () => (T$.IdentityMapOfString$Module = dart.constFn(_js_helper.IdentityMap$(core.String, module.Module)))(),
    InjectToObject: () => (T$.InjectToObject = dart.constFn(dart.fnType(core.Object, [inject.Inject])))()
  };
  var T$Eval = Object.assign({
    _: () => T$Eval
  }, T$);
  var S = {
    _: () => S
  };
  var S$Eval = Object.assign({
    _: () => S$Eval
  }, S);
  const CT = Object.create({
    _: () => (C, CT)
  });
  dart.defineLazy(CT, {
    get C0() {
      return C[0] = dart.constList([], modular_route.ModularRoute);
    },
    get C1() {
      return C[1] = dart.constList([], module.Module);
    },
    get C2() {
      return C[2] = dart.constList([], core.Type);
    },
    get C5() {
      return C[5] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "module",
        [_Location_column]: 7,
        [_Location_line]: 66,
        [_Location_file]: null
      });
    },
    get C6() {
      return C[6] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 67,
        [_Location_file]: null
      });
    },
    get C4() {
      return C[4] = dart.constList([C[5] || CT.C5, C[6] || CT.C6], widget_inspector._Location);
    },
    get C3() {
      return C[3] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[4] || CT.C4,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 65,
        [_Location_file]: "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_modular-3.1.1+1/lib/src/presenters/widgets/widget_module.dart"
      });
    },
    get C7() {
      return C[7] = dart.const({
        __proto__: modular_route.TransitionType.prototype,
        [_name$]: "TransitionType.defaultTransition",
        index: 0
      });
    },
    get C8() {
      return C[8] = dart.const({
        __proto__: core.Duration.prototype,
        [Duration__duration]: 300000
      });
    },
    get C10() {
      return C[10] = dart.constMap(core.String, dart.dynamic, []);
    },
    get C9() {
      return C[9] = dart.const({
        __proto__: modular_arguments.ModularArguments.prototype,
        [ModularArguments_data]: null,
        [ModularArguments_uri]: null,
        [ModularArguments_params]: C[10] || CT.C10
      });
    },
    get C11() {
      return C[11] = dart.fn(transitions$.fadeInTransition, T$.FnAndDurationAndRouteSettingsToPageRouteBuilderOfT());
    },
    get C12() {
      return C[12] = dart.fn(transitions$.noTransition, T$.FnAndDurationAndRouteSettingsToPageRouteBuilderOfT$1());
    },
    get C13() {
      return C[13] = dart.fn(transitions$.rightToLeft, T$.FnAndDurationAndRouteSettingsToPageRouteBuilderOfT$2());
    },
    get C14() {
      return C[14] = dart.fn(transitions$.leftToRight, T$.FnAndDurationAndRouteSettingsToPageRouteBuilderOfT$3());
    },
    get C15() {
      return C[15] = dart.fn(transitions$.upToDown, T$.FnAndDurationAndRouteSettingsToPageRouteBuilderOfT$4());
    },
    get C16() {
      return C[16] = dart.fn(transitions$.downToUp, T$.FnAndDurationAndRouteSettingsToPageRouteBuilderOfT$5());
    },
    get C17() {
      return C[17] = dart.fn(transitions$.scale, T$.FnAndDurationAndRouteSettingsToPageRouteBuilderOfT$6());
    },
    get C18() {
      return C[18] = dart.fn(transitions$.rotate, T$.FnAndDurationAndRouteSettingsToPageRouteBuilderOfT$7());
    },
    get C19() {
      return C[19] = dart.fn(transitions$.size, T$.FnAndDurationAndRouteSettingsToPageRouteBuilderOfT$8());
    },
    get C20() {
      return C[20] = dart.fn(transitions$.rightToLeftWithFade, T$.FnAndDurationAndRouteSettingsToPageRouteBuilderOfT$9());
    },
    get C21() {
      return C[21] = dart.fn(transitions$.leftToRightWithFade, T$.FnAndDurationAndRouteSettingsToPageRouteBuilderOfT$10());
    },
    get C24() {
      return C[24] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "opacity",
        [_Location_column]: 11,
        [_Location_line]: 23,
        [_Location_file]: null
      });
    },
    get C25() {
      return C[25] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 11,
        [_Location_line]: 24,
        [_Location_file]: null
      });
    },
    get C23() {
      return C[23] = dart.constList([C[24] || CT.C24, C[25] || CT.C25], widget_inspector._Location);
    },
    get C22() {
      return C[22] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[23] || CT.C23,
        [_Location_name]: null,
        [_Location_column]: 16,
        [_Location_line]: 22,
        [_Location_file]: "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_modular-3.1.1+1/lib/src/presenters/transitions/transitions.dart"
      });
    },
    get C27() {
      return C[27] = dart.constList([], widget_inspector._Location);
    },
    get C26() {
      return C[26] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[27] || CT.C27,
        [_Location_name]: null,
        [_Location_column]: 11,
        [_Location_line]: 43,
        [_Location_file]: "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_modular-3.1.1+1/lib/src/presenters/navigation/router_outlet_delegate.dart"
      });
    },
    get C30() {
      return C[30] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "key",
        [_Location_column]: 13,
        [_Location_line]: 45,
        [_Location_file]: null
      });
    },
    get C31() {
      return C[31] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "pages",
        [_Location_column]: 13,
        [_Location_line]: 46,
        [_Location_file]: null
      });
    },
    get C32() {
      return C[32] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onPopPage",
        [_Location_column]: 13,
        [_Location_line]: 47,
        [_Location_file]: null
      });
    },
    get C29() {
      return C[29] = dart.constList([C[30] || CT.C30, C[31] || CT.C31, C[32] || CT.C32], widget_inspector._Location);
    },
    get C28() {
      return C[28] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[29] || CT.C29,
        [_Location_name]: null,
        [_Location_column]: 11,
        [_Location_line]: 44,
        [_Location_file]: "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_modular-3.1.1+1/lib/src/presenters/navigation/router_outlet_delegate.dart"
      });
    },
    get C33() {
      return C[33] = dart.constList([], navigator.Page);
    },
    get C34() {
      return C[34] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[27] || CT.C27,
        [_Location_name]: null,
        [_Location_column]: 11,
        [_Location_line]: 38,
        [_Location_file]: "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_modular-3.1.1+1/lib/src/presenters/navigation/modular_router_delegate.dart"
      });
    },
    get C37() {
      return C[37] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "key",
        [_Location_column]: 13,
        [_Location_line]: 40,
        [_Location_file]: null
      });
    },
    get C38() {
      return C[38] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "pages",
        [_Location_column]: 13,
        [_Location_line]: 41,
        [_Location_file]: null
      });
    },
    get C39() {
      return C[39] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onPopPage",
        [_Location_column]: 13,
        [_Location_line]: 42,
        [_Location_file]: null
      });
    },
    get C36() {
      return C[36] = dart.constList([C[37] || CT.C37, C[38] || CT.C38, C[39] || CT.C39], widget_inspector._Location);
    },
    get C35() {
      return C[35] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[36] || CT.C36,
        [_Location_name]: null,
        [_Location_column]: 11,
        [_Location_line]: 39,
        [_Location_file]: "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_modular-3.1.1+1/lib/src/presenters/navigation/modular_router_delegate.dart"
      });
    },
    get C42() {
      return C[42] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "routerDelegate",
        [_Location_column]: 7,
        [_Location_line]: 151,
        [_Location_file]: null
      });
    },
    get C43() {
      return C[43] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "backButtonDispatcher",
        [_Location_column]: 7,
        [_Location_line]: 152,
        [_Location_file]: null
      });
    },
    get C41() {
      return C[41] = dart.constList([C[42] || CT.C42, C[43] || CT.C43], widget_inspector._Location);
    },
    get C40() {
      return C[40] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[41] || CT.C41,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 150,
        [_Location_file]: "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_modular-3.1.1+1/lib/src/presenters/modular_base.dart"
      });
    },
    get C46() {
      return C[46] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "key",
        [_Location_column]: 7,
        [_Location_line]: 42,
        [_Location_file]: null
      });
    },
    get C47() {
      return C[47] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "scaffoldMessengerKey",
        [_Location_column]: 7,
        [_Location_line]: 43,
        [_Location_file]: null
      });
    },
    get C48() {
      return C[48] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "routeInformationProvider",
        [_Location_column]: 7,
        [_Location_line]: 44,
        [_Location_file]: null
      });
    },
    get C49() {
      return C[49] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "backButtonDispatcher",
        [_Location_column]: 7,
        [_Location_line]: 45,
        [_Location_file]: null
      });
    },
    get C50() {
      return C[50] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "builder",
        [_Location_column]: 7,
        [_Location_line]: 46,
        [_Location_file]: null
      });
    },
    get C51() {
      return C[51] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "title",
        [_Location_column]: 7,
        [_Location_line]: 47,
        [_Location_file]: null
      });
    },
    get C52() {
      return C[52] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onGenerateTitle",
        [_Location_column]: 7,
        [_Location_line]: 48,
        [_Location_file]: null
      });
    },
    get C53() {
      return C[53] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "color",
        [_Location_column]: 7,
        [_Location_line]: 49,
        [_Location_file]: null
      });
    },
    get C54() {
      return C[54] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "theme",
        [_Location_column]: 7,
        [_Location_line]: 50,
        [_Location_file]: null
      });
    },
    get C55() {
      return C[55] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "darkTheme",
        [_Location_column]: 7,
        [_Location_line]: 51,
        [_Location_file]: null
      });
    },
    get C56() {
      return C[56] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "highContrastTheme",
        [_Location_column]: 7,
        [_Location_line]: 52,
        [_Location_file]: null
      });
    },
    get C57() {
      return C[57] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "highContrastDarkTheme",
        [_Location_column]: 7,
        [_Location_line]: 53,
        [_Location_file]: null
      });
    },
    get C58() {
      return C[58] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "themeMode",
        [_Location_column]: 7,
        [_Location_line]: 54,
        [_Location_file]: null
      });
    },
    get C59() {
      return C[59] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "locale",
        [_Location_column]: 7,
        [_Location_line]: 55,
        [_Location_file]: null
      });
    },
    get C60() {
      return C[60] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "localizationsDelegates",
        [_Location_column]: 7,
        [_Location_line]: 56,
        [_Location_file]: null
      });
    },
    get C61() {
      return C[61] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "localeListResolutionCallback",
        [_Location_column]: 7,
        [_Location_line]: 57,
        [_Location_file]: null
      });
    },
    get C62() {
      return C[62] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "localeResolutionCallback",
        [_Location_column]: 7,
        [_Location_line]: 58,
        [_Location_file]: null
      });
    },
    get C63() {
      return C[63] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "supportedLocales",
        [_Location_column]: 7,
        [_Location_line]: 59,
        [_Location_file]: null
      });
    },
    get C64() {
      return C[64] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "debugShowMaterialGrid",
        [_Location_column]: 7,
        [_Location_line]: 60,
        [_Location_file]: null
      });
    },
    get C65() {
      return C[65] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "showPerformanceOverlay",
        [_Location_column]: 7,
        [_Location_line]: 61,
        [_Location_file]: null
      });
    },
    get C66() {
      return C[66] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "checkerboardRasterCacheImages",
        [_Location_column]: 7,
        [_Location_line]: 62,
        [_Location_file]: null
      });
    },
    get C67() {
      return C[67] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "checkerboardOffscreenLayers",
        [_Location_column]: 7,
        [_Location_line]: 63,
        [_Location_file]: null
      });
    },
    get C68() {
      return C[68] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "showSemanticsDebugger",
        [_Location_column]: 7,
        [_Location_line]: 64,
        [_Location_file]: null
      });
    },
    get C69() {
      return C[69] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "debugShowCheckedModeBanner",
        [_Location_column]: 7,
        [_Location_line]: 65,
        [_Location_file]: null
      });
    },
    get C70() {
      return C[70] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "shortcuts",
        [_Location_column]: 7,
        [_Location_line]: 66,
        [_Location_file]: null
      });
    },
    get C71() {
      return C[71] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "actions",
        [_Location_column]: 7,
        [_Location_line]: 67,
        [_Location_file]: null
      });
    },
    get C72() {
      return C[72] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "restorationScopeId",
        [_Location_column]: 7,
        [_Location_line]: 68,
        [_Location_file]: null
      });
    },
    get C73() {
      return C[73] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "routeInformationParser",
        [_Location_column]: 7,
        [_Location_line]: 69,
        [_Location_file]: null
      });
    },
    get C74() {
      return C[74] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "routerDelegate",
        [_Location_column]: 7,
        [_Location_line]: 70,
        [_Location_file]: null
      });
    },
    get C45() {
      return C[45] = dart.constList([C[46] || CT.C46, C[47] || CT.C47, C[48] || CT.C48, C[49] || CT.C49, C[50] || CT.C50, C[51] || CT.C51, C[52] || CT.C52, C[53] || CT.C53, C[54] || CT.C54, C[55] || CT.C55, C[56] || CT.C56, C[57] || CT.C57, C[58] || CT.C58, C[59] || CT.C59, C[60] || CT.C60, C[61] || CT.C61, C[62] || CT.C62, C[63] || CT.C63, C[64] || CT.C64, C[65] || CT.C65, C[66] || CT.C66, C[67] || CT.C67, C[68] || CT.C68, C[69] || CT.C69, C[70] || CT.C70, C[71] || CT.C71, C[72] || CT.C72, C[73] || CT.C73, C[74] || CT.C74], widget_inspector._Location);
    },
    get C44() {
      return C[44] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[45] || CT.C45,
        [_Location_name]: null,
        [_Location_column]: 29,
        [_Location_line]: 41,
        [_Location_file]: "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_modular-3.1.1+1/lib/src/presenters/modular_base.dart"
      });
    },
    get C77() {
      return C[77] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "key",
        [_Location_column]: 7,
        [_Location_line]: 83,
        [_Location_file]: null
      });
    },
    get C78() {
      return C[78] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "routeInformationProvider",
        [_Location_column]: 7,
        [_Location_line]: 84,
        [_Location_file]: null
      });
    },
    get C79() {
      return C[79] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "backButtonDispatcher",
        [_Location_column]: 7,
        [_Location_line]: 85,
        [_Location_file]: null
      });
    },
    get C80() {
      return C[80] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "builder",
        [_Location_column]: 7,
        [_Location_line]: 86,
        [_Location_file]: null
      });
    },
    get C81() {
      return C[81] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "title",
        [_Location_column]: 7,
        [_Location_line]: 87,
        [_Location_file]: null
      });
    },
    get C82() {
      return C[82] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onGenerateTitle",
        [_Location_column]: 7,
        [_Location_line]: 88,
        [_Location_file]: null
      });
    },
    get C83() {
      return C[83] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "color",
        [_Location_column]: 7,
        [_Location_line]: 89,
        [_Location_file]: null
      });
    },
    get C84() {
      return C[84] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "theme",
        [_Location_column]: 7,
        [_Location_line]: 90,
        [_Location_file]: null
      });
    },
    get C85() {
      return C[85] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "locale",
        [_Location_column]: 7,
        [_Location_line]: 91,
        [_Location_file]: null
      });
    },
    get C86() {
      return C[86] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "localizationsDelegates",
        [_Location_column]: 7,
        [_Location_line]: 92,
        [_Location_file]: null
      });
    },
    get C87() {
      return C[87] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "localeListResolutionCallback",
        [_Location_column]: 7,
        [_Location_line]: 93,
        [_Location_file]: null
      });
    },
    get C88() {
      return C[88] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "localeResolutionCallback",
        [_Location_column]: 7,
        [_Location_line]: 94,
        [_Location_file]: null
      });
    },
    get C89() {
      return C[89] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "supportedLocales",
        [_Location_column]: 7,
        [_Location_line]: 95,
        [_Location_file]: null
      });
    },
    get C90() {
      return C[90] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "showPerformanceOverlay",
        [_Location_column]: 7,
        [_Location_line]: 96,
        [_Location_file]: null
      });
    },
    get C91() {
      return C[91] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "checkerboardRasterCacheImages",
        [_Location_column]: 7,
        [_Location_line]: 97,
        [_Location_file]: null
      });
    },
    get C92() {
      return C[92] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "checkerboardOffscreenLayers",
        [_Location_column]: 7,
        [_Location_line]: 98,
        [_Location_file]: null
      });
    },
    get C93() {
      return C[93] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "showSemanticsDebugger",
        [_Location_column]: 7,
        [_Location_line]: 99,
        [_Location_file]: null
      });
    },
    get C94() {
      return C[94] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "debugShowCheckedModeBanner",
        [_Location_column]: 7,
        [_Location_line]: 100,
        [_Location_file]: null
      });
    },
    get C95() {
      return C[95] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "shortcuts",
        [_Location_column]: 7,
        [_Location_line]: 101,
        [_Location_file]: null
      });
    },
    get C96() {
      return C[96] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "actions",
        [_Location_column]: 7,
        [_Location_line]: 102,
        [_Location_file]: null
      });
    },
    get C97() {
      return C[97] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "restorationScopeId",
        [_Location_column]: 7,
        [_Location_line]: 103,
        [_Location_file]: null
      });
    },
    get C98() {
      return C[98] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "routeInformationParser",
        [_Location_column]: 7,
        [_Location_line]: 104,
        [_Location_file]: null
      });
    },
    get C99() {
      return C[99] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "routerDelegate",
        [_Location_column]: 7,
        [_Location_line]: 105,
        [_Location_file]: null
      });
    },
    get C76() {
      return C[76] = dart.constList([C[77] || CT.C77, C[78] || CT.C78, C[79] || CT.C79, C[80] || CT.C80, C[81] || CT.C81, C[82] || CT.C82, C[83] || CT.C83, C[84] || CT.C84, C[85] || CT.C85, C[86] || CT.C86, C[87] || CT.C87, C[88] || CT.C88, C[89] || CT.C89, C[90] || CT.C90, C[91] || CT.C91, C[92] || CT.C92, C[93] || CT.C93, C[94] || CT.C94, C[95] || CT.C95, C[96] || CT.C96, C[97] || CT.C97, C[98] || CT.C98, C[99] || CT.C99], widget_inspector._Location);
    },
    get C75() {
      return C[75] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[76] || CT.C76,
        [_Location_name]: null,
        [_Location_column]: 30,
        [_Location_line]: 82,
        [_Location_file]: "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_modular-3.1.1+1/lib/src/presenters/modular_base.dart"
      });
    },
    get C100() {
      return C[100] = dart.constList([], T$.BindOfObject());
    },
    get C101() {
      return C[101] = dart.const({
        __proto__: modular_route.TransitionType.prototype,
        [_name$]: "TransitionType.fadeIn",
        index: 1
      });
    },
    get C102() {
      return C[102] = dart.const({
        __proto__: modular_route.TransitionType.prototype,
        [_name$]: "TransitionType.noTransition",
        index: 2
      });
    },
    get C103() {
      return C[103] = dart.const({
        __proto__: modular_route.TransitionType.prototype,
        [_name$]: "TransitionType.rightToLeft",
        index: 3
      });
    },
    get C104() {
      return C[104] = dart.const({
        __proto__: modular_route.TransitionType.prototype,
        [_name$]: "TransitionType.leftToRight",
        index: 4
      });
    },
    get C105() {
      return C[105] = dart.const({
        __proto__: modular_route.TransitionType.prototype,
        [_name$]: "TransitionType.upToDown",
        index: 5
      });
    },
    get C106() {
      return C[106] = dart.const({
        __proto__: modular_route.TransitionType.prototype,
        [_name$]: "TransitionType.downToUp",
        index: 6
      });
    },
    get C107() {
      return C[107] = dart.const({
        __proto__: modular_route.TransitionType.prototype,
        [_name$]: "TransitionType.scale",
        index: 7
      });
    },
    get C108() {
      return C[108] = dart.const({
        __proto__: modular_route.TransitionType.prototype,
        [_name$]: "TransitionType.rotate",
        index: 8
      });
    },
    get C109() {
      return C[109] = dart.const({
        __proto__: modular_route.TransitionType.prototype,
        [_name$]: "TransitionType.size",
        index: 9
      });
    },
    get C110() {
      return C[110] = dart.const({
        __proto__: modular_route.TransitionType.prototype,
        [_name$]: "TransitionType.rightToLeftWithFade",
        index: 10
      });
    },
    get C111() {
      return C[111] = dart.const({
        __proto__: modular_route.TransitionType.prototype,
        [_name$]: "TransitionType.leftToRightWithFade",
        index: 11
      });
    },
    get C112() {
      return C[112] = dart.const({
        __proto__: modular_route.TransitionType.prototype,
        [_name$]: "TransitionType.custom",
        index: 12
      });
    },
    get C113() {
      return C[113] = dart.constList([C[7] || CT.C7, C[101] || CT.C101, C[102] || CT.C102, C[103] || CT.C103, C[104] || CT.C104, C[105] || CT.C105, C[106] || CT.C106, C[107] || CT.C107, C[108] || CT.C108, C[109] || CT.C109, C[110] || CT.C110, C[111] || CT.C111, C[112] || CT.C112], modular_route.TransitionType);
    }
  }, false);
  var C = Array(114).fill(void 0);
  var I = [
    "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_modular-3.1.1+1/lib/src/presenters/widgets/widget_module.dart",
    "package:flutter_modular/src/presenters/widgets/widget_module.dart",
    "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_modular-3.1.1+1/lib/src/core/interfaces/module.dart",
    "package:flutter_modular/src/core/interfaces/module.dart",
    "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_modular-3.1.1+1/lib/src/presenters/widgets/navigation_listener.dart",
    "package:flutter_modular/src/presenters/widgets/navigation_listener.dart",
    "package:flutter_modular/src/presenters/widgets/modular_state.dart",
    "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_modular-3.1.1+1/lib/src/presenters/widgets/modular_app.dart",
    "package:flutter_modular/src/presenters/widgets/modular_app.dart",
    "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_modular-3.1.1+1/lib/src/core/models/wildcard_route.dart",
    "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_modular-3.1.1+1/lib/src/presenters/modular_route_impl.dart",
    "package:flutter_modular/src/core/interfaces/modular_route.dart",
    "package:flutter_modular/src/presenters/modular_route_impl.dart",
    "package:flutter_modular/src/core/models/wildcard_route.dart",
    "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_modular-3.1.1+1/lib/src/core/models/module_route.dart",
    "package:flutter_modular/src/core/models/module_route.dart",
    "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_modular-3.1.1+1/lib/src/presenters/transitions/transitions.dart",
    "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_modular-3.1.1+1/lib/src/core/models/child_route.dart",
    "package:flutter_modular/src/core/models/child_route.dart",
    "package:flutter_modular/src/core/interfaces/route_guard.dart",
    "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_modular-3.1.1+1/lib/src/presenters/navigation/router_outlet_delegate.dart",
    "package:flutter_modular/src/presenters/navigation/router_outlet_delegate.dart",
    "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_modular-3.1.1+1/lib/src/presenters/navigation/modular_route_information_parser.dart",
    "package:flutter_modular/src/presenters/navigation/modular_route_information_parser.dart",
    "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_modular-3.1.1+1/lib/src/presenters/navigation/modular_page.dart",
    "package:flutter_modular/src/presenters/navigation/modular_page.dart",
    "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_modular-3.1.1+1/lib/src/presenters/navigation/custom_navigator.dart",
    "package:flutter_modular/src/presenters/navigation/custom_navigator.dart",
    "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_modular-3.1.1+1/lib/src/presenters/navigation/modular_router_delegate.dart",
    "package:flutter_modular/src/presenters/navigation/modular_router_delegate.dart",
    "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_modular-3.1.1+1/lib/src/presenters/modular_impl.dart",
    "package:flutter_modular/src/presenters/modular_impl.dart",
    "package:flutter_modular/src/core/interfaces/modular_interface.dart",
    "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_modular-3.1.1+1/lib/src/presenters/modular_base.dart",
    "package:flutter_modular/src/presenters/modular_base.dart",
    "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_modular-3.1.1+1/lib/src/core/models/bind.dart",
    "package:flutter_modular/src/core/models/bind.dart",
    "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_modular-3.1.1+1/lib/src/presenters/inject.dart",
    "package:flutter_modular/src/presenters/inject.dart",
    "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_modular-3.1.1+1/lib/src/core/interfaces/modular_route.dart"
  ];
  var routes = dart.privateName(widget_module, "WidgetModule.routes");
  var imports = dart.privateName(widget_module, "WidgetModule.imports");
  var _fakeModule = dart.privateName(widget_module, "_fakeModule");
  var _Location_parameterLocations = dart.privateName(widget_inspector, "_Location.parameterLocations");
  var _Location_name = dart.privateName(widget_inspector, "_Location.name");
  var _Location_column = dart.privateName(widget_inspector, "_Location.column");
  var _Location_line = dart.privateName(widget_inspector, "_Location.line");
  var _Location_file = dart.privateName(widget_inspector, "_Location.file");
  widget_module.WidgetModule = class WidgetModule extends framework.StatelessWidget {
    get routes() {
      return this[routes];
    }
    set routes(value) {
      super.routes = value;
    }
    get imports() {
      return this[imports];
    }
    set imports(value) {
      super.imports = value;
    }
    getInjectedBind(T, type = null) {
      return this[_fakeModule].getInjectedBind(T, type);
    }
    changeBinds(b) {
      if (b == null) dart.nullFailed(I[0], 32, 31, "b");
      this[_fakeModule].changeBinds(b);
    }
    cleanInjects() {
      this[_fakeModule].cleanInjects();
    }
    getBind(T, opts) {
      let params = opts && 'params' in opts ? opts.params : null;
      let typesInRequest = opts && 'typesInRequest' in opts ? opts.typesInRequest : C[2] || CT.C2;
      if (typesInRequest == null) dart.nullFailed(I[0], 43, 74, "typesInRequest");
      return this[_fakeModule].getBind(T, {typesInRequest: typesInRequest});
    }
    get paths() {
      return T$.JSArrayOfString().of([dart.toString(this[$runtimeType])]);
    }
    remove(T) {
      return this[_fakeModule].remove(T);
    }
    instance() {
      this[_fakeModule].instance();
    }
    build(context) {
      if (context == null) dart.nullFailed(I[0], 64, 29, "context");
      return new widget_module.ModularProvider.new({module: this, child: this.view, $creationLocationd_0dea112b090073317d4: C[3] || CT.C3});
    }
  };
  (widget_module.WidgetModule.new = function(opts) {
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[routes] = C[0] || CT.C0;
    this[_fakeModule] = new widget_module._FakeModule.new();
    this[imports] = C[1] || CT.C1;
    widget_module.WidgetModule.__proto__.new.call(this, {$creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    this[_fakeModule].changeBinds(this.binds);
  }).prototype = widget_module.WidgetModule.prototype;
  dart.addTypeTests(widget_module.WidgetModule);
  dart.addTypeCaches(widget_module.WidgetModule);
  widget_module.WidgetModule[dart.implements] = () => [module.Module];
  dart.setMethodSignature(widget_module.WidgetModule, () => ({
    __proto__: dart.getMethods(widget_module.WidgetModule.__proto__),
    getInjectedBind: dart.gFnType(T => [dart.nullable(T), [], [dart.nullable(core.Type)]], T => [dart.nullable(core.Object)]),
    changeBinds: dart.fnType(dart.void, [core.List$(bind$.Bind$(core.Object))]),
    cleanInjects: dart.fnType(dart.void, []),
    getBind: dart.gFnType(T => [dart.nullable(T), [], {params: dart.nullable(core.Map$(core.String, dart.dynamic)), typesInRequest: core.List$(core.Type)}, {}], T => [core.Object]),
    remove: dart.gFnType(T => [core.bool, []], T => [dart.nullable(core.Object)]),
    instance: dart.fnType(dart.void, []),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setGetterSignature(widget_module.WidgetModule, () => ({
    __proto__: dart.getGetters(widget_module.WidgetModule.__proto__),
    paths: core.List$(core.String)
  }));
  dart.setLibraryUri(widget_module.WidgetModule, I[1]);
  dart.setFieldSignature(widget_module.WidgetModule, () => ({
    __proto__: dart.getFields(widget_module.WidgetModule.__proto__),
    routes: dart.finalFieldType(core.List$(modular_route.ModularRoute)),
    [_fakeModule]: dart.finalFieldType(widget_module._FakeModule),
    imports: dart.finalFieldType(core.List$(module.Module))
  }));
  var routes$ = dart.privateName(widget_module, "_FakeModule.routes");
  var ___FakeModule_binds = dart.privateName(widget_module, "_#_FakeModule#binds");
  var binds = dart.privateName(module, "Module.binds");
  var routes$0 = dart.privateName(module, "Module.routes");
  var imports$ = dart.privateName(module, "Module.imports");
  var paths = dart.privateName(module, "Module.paths");
  var _singletonBinds = dart.privateName(module, "_singletonBinds");
  var _getInjectType = dart.privateName(module, "_getInjectType");
  var _callDispose = dart.privateName(module, "_callDispose");
  module.Module = class Module extends core.Object {
    get binds() {
      return this[binds];
    }
    set binds(value) {
      super.binds = value;
    }
    get routes() {
      return this[routes$0];
    }
    set routes(value) {
      super.routes = value;
    }
    get imports() {
      return this[imports$];
    }
    set imports(value) {
      super.imports = value;
    }
    get paths() {
      return this[paths];
    }
    set paths(value) {
      super.paths = value;
    }
    changeBinds(b) {
      if (b == null) dart.nullFailed(I[2], 28, 31, "b");
      this.binds[$clear]();
      this.binds[$addAll](b);
    }
    getInjectedBind(T, type = null) {
      let t0;
      type = (t0 = type, t0 == null ? this[_getInjectType](T) : t0);
      if (dart.test(this[_singletonBinds][$containsKey](type))) {
        return dart.nullable(T).as(this[_singletonBinds][$_get](type));
      } else {
        return null;
      }
    }
    getBind(T, opts) {
      let t1, t0;
      let typesInRequest = opts && 'typesInRequest' in opts ? opts.typesInRequest : null;
      if (typesInRequest == null) dart.nullFailed(I[2], 44, 53, "typesInRequest");
      let bindValue = null;
      let type = this[_getInjectType](T);
      if (dart.test(this[_singletonBinds][$containsKey](type))) {
        bindValue = T.as(this[_singletonBinds][$_get](type));
        return bindValue;
      }
      let bind = this.binds[$firstWhere](dart.fn(b => {
        if (b == null) dart.nullFailed(I[2], 52, 34, "b");
        return dart.fnType(T, [inject.Inject]).is(b.inject);
      }, T$.BindOfObjectTobool()), {orElse: dart.fn(() => new bind$.BindEmpty.new(), T$.VoidToBindEmpty())});
      if (bind$.BindEmpty.is(bind)) {
        typesInRequest[$remove](type);
        return null;
      }
      if (dart.test(typesInRequest[$contains](type))) {
        dart.throw(new errors.ModularError.new("Recursive calls detected. This can cause StackOverflow.\nCheck the Binds of the " + dart.str(this[$runtimeType]) + " module:\n***\n" + dart.str(typesInRequest[$join]("\n")) + "\n***\n      \n      "));
      } else {
        typesInRequest[$add](type);
      }
      bindValue = T.as((t0 = bind, t1 = new inject.Inject.new({typesInRequest: typesInRequest}), t0.inject(t1)));
      if (dart.test(bind.isSingleton)) {
        this[_singletonBinds][$_set](type, bindValue);
      }
      typesInRequest[$remove](type);
      return bindValue;
    }
    remove(T) {
      let type = this[_getInjectType](T);
      if (dart.test(this[_singletonBinds][$containsKey](type))) {
        let inject = this[_singletonBinds][$_get](type);
        this[_callDispose](inject);
        this[_singletonBinds][$remove](type);
        return true;
      } else {
        return false;
      }
    }
    [_callDispose](bind) {
      if (disposable.Disposable.is(bind)) {
        bind.dispose();
      } else if (change_notifier.ChangeNotifier.is(bind)) {
        bind.dispose();
      } else if (core.Sink.is(bind)) {
        bind.close();
      } else if (T$.StoreOfObject$Object().is(bind)) {
        bind.destroy();
      }
    }
    cleanInjects() {
      for (let key of this[_singletonBinds][$keys]) {
        let _bind = this[_singletonBinds][$_get](key);
        this[_callDispose](_bind);
      }
      this[_singletonBinds][$clear]();
    }
    [_getInjectType](B) {
      let foundType = dart.wrapType(B);
      this[_singletonBinds][$forEach](dart.fn((key, value) => {
        if (key == null) dart.nullFailed(I[2], 116, 30, "key");
        if (B.is(value)) {
          foundType = key;
        }
      }, T$.TypeAnddynamicTovoid()));
      return foundType;
    }
    instance() {
      let t1, t0;
      for (let bindElement of this.binds) {
        if (!dart.test(bindElement.isLazy)) {
          let b = (t0 = bindElement, t1 = new inject.Inject.new(), t0.inject(t1));
          this[_singletonBinds][$_set](dart.runtimeType(b), b);
        }
      }
    }
  };
  (module.Module.new = function() {
    this[_singletonBinds] = new (T$.LinkedMapOfType$dynamic()).new();
    this[binds] = T$.JSArrayOfBindOfObject().of([]);
    this[routes$0] = T$.JSArrayOfModularRoute().of([]);
    this[imports$] = T$.JSArrayOfModule().of([]);
    this[paths] = T$.JSArrayOfString().of([]);
    for (let module of this.imports) {
      for (let bind of module.binds[$where](dart.fn(element => {
        if (element == null) dart.nullFailed(I[2], 21, 44, "element");
        return element.export;
      }, T$.BindOfObjectTobool()))) {
        this.binds[$add](bind);
      }
    }
  }).prototype = module.Module.prototype;
  dart.addTypeTests(module.Module);
  dart.addTypeCaches(module.Module);
  dart.setMethodSignature(module.Module, () => ({
    __proto__: dart.getMethods(module.Module.__proto__),
    changeBinds: dart.fnType(dart.void, [core.List$(bind$.Bind$(core.Object))]),
    getInjectedBind: dart.gFnType(T => [dart.nullable(T), [], [dart.nullable(core.Type)]], T => [dart.nullable(core.Object)]),
    getBind: dart.gFnType(T => [dart.nullable(T), [], {}, {typesInRequest: core.List$(core.Type)}], T => [core.Object]),
    remove: dart.gFnType(T => [core.bool, []], T => [dart.nullable(core.Object)]),
    [_callDispose]: dart.fnType(dart.dynamic, [dart.dynamic]),
    cleanInjects: dart.fnType(dart.void, []),
    [_getInjectType]: dart.gFnType(B => [core.Type, []], B => [dart.nullable(core.Object)]),
    instance: dart.fnType(dart.void, [])
  }));
  dart.setLibraryUri(module.Module, I[3]);
  dart.setFieldSignature(module.Module, () => ({
    __proto__: dart.getFields(module.Module.__proto__),
    [_singletonBinds]: dart.finalFieldType(core.Map$(core.Type, dart.dynamic)),
    binds: dart.finalFieldType(core.List$(bind$.Bind$(core.Object))),
    routes: dart.finalFieldType(core.List$(modular_route.ModularRoute)),
    imports: dart.finalFieldType(core.List$(module.Module)),
    paths: dart.finalFieldType(core.List$(core.String))
  }));
  widget_module._FakeModule = class _FakeModule extends module.Module {
    get routes() {
      return this[routes$];
    }
    set routes(value) {
      super.routes = value;
    }
    get binds() {
      let t1, t1$, t0;
      t0 = this[___FakeModule_binds];
      return t0 == null ? (t1$ = (t1 = this.bindsInject, t1 == null ? T$.JSArrayOfBindOfObject().of([]) : t1), this[___FakeModule_binds] == null ? this[___FakeModule_binds] = t1$ : dart.throw(new _internal.LateError.fieldADI("binds"))) : t0;
    }
  };
  (widget_module._FakeModule.new = function(opts) {
    let bindsInject = opts && 'bindsInject' in opts ? opts.bindsInject : null;
    this[___FakeModule_binds] = null;
    this[routes$] = T$.JSArrayOfModularRoute().of([]);
    this.bindsInject = bindsInject;
    widget_module._FakeModule.__proto__.new.call(this);
    this.paths[$add](dart.toString(this[$runtimeType]));
  }).prototype = widget_module._FakeModule.prototype;
  dart.addTypeTests(widget_module._FakeModule);
  dart.addTypeCaches(widget_module._FakeModule);
  dart.setGetterSignature(widget_module._FakeModule, () => ({
    __proto__: dart.getGetters(widget_module._FakeModule.__proto__),
    binds: core.List$(bind$.Bind$(core.Object))
  }));
  dart.setLibraryUri(widget_module._FakeModule, I[1]);
  dart.setFieldSignature(widget_module._FakeModule, () => ({
    __proto__: dart.getFields(widget_module._FakeModule.__proto__),
    bindsInject: dart.finalFieldType(dart.nullable(core.List$(bind$.Bind$(core.Object)))),
    [___FakeModule_binds]: dart.fieldType(dart.nullable(core.List$(bind$.Bind$(core.Object)))),
    routes: dart.finalFieldType(core.List$(modular_route.ModularRoute))
  }));
  var module$ = dart.privateName(widget_module, "ModularProvider.module");
  var child$ = dart.privateName(widget_module, "ModularProvider.child");
  widget_module.ModularProvider = class ModularProvider extends framework.StatefulWidget {
    get module() {
      return this[module$];
    }
    set module(value) {
      super.module = value;
    }
    get child() {
      return this[child$];
    }
    set child(value) {
      super.child = value;
    }
    createState() {
      return new widget_module._ModularProviderState.new();
    }
  };
  (widget_module.ModularProvider.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let module = opts && 'module' in opts ? opts.module : null;
    if (module == null) dart.nullFailed(I[0], 90, 50, "module");
    let child = opts && 'child' in opts ? opts.child : null;
    if (child == null) dart.nullFailed(I[0], 90, 72, "child");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[module$] = module;
    this[child$] = child;
    widget_module.ModularProvider.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = widget_module.ModularProvider.prototype;
  dart.addTypeTests(widget_module.ModularProvider);
  dart.addTypeCaches(widget_module.ModularProvider);
  dart.setMethodSignature(widget_module.ModularProvider, () => ({
    __proto__: dart.getMethods(widget_module.ModularProvider.__proto__),
    createState: dart.fnType(widget_module._ModularProviderState, [])
  }));
  dart.setLibraryUri(widget_module.ModularProvider, I[1]);
  dart.setFieldSignature(widget_module.ModularProvider, () => ({
    __proto__: dart.getFields(widget_module.ModularProvider.__proto__),
    module: dart.finalFieldType(module.Module),
    child: dart.finalFieldType(framework.Widget)
  }));
  widget_module._ModularProviderState = class _ModularProviderState extends framework.State$(widget_module.ModularProvider) {
    initState() {
      super.initState();
      widget_module._debugPrintModular("-- " + dart.str(dart.runtimeType(this.widget.module)) + " INITIALIZED");
    }
    build(context) {
      if (context == null) dart.nullFailed(I[0], 105, 29, "context");
      return this.widget.child;
    }
    dispose() {
      super.dispose();
      widget_module._debugPrintModular("-- " + dart.str(dart.runtimeType(this.widget.module)) + " DISPOSED");
    }
  };
  (widget_module._ModularProviderState.new = function() {
    widget_module._ModularProviderState.__proto__.new.call(this);
    ;
  }).prototype = widget_module._ModularProviderState.prototype;
  dart.addTypeTests(widget_module._ModularProviderState);
  dart.addTypeCaches(widget_module._ModularProviderState);
  dart.setMethodSignature(widget_module._ModularProviderState, () => ({
    __proto__: dart.getMethods(widget_module._ModularProviderState.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(widget_module._ModularProviderState, I[1]);
  widget_module._debugPrintModular = function _debugPrintModular(text) {
    if (text == null) dart.nullFailed(I[0], 8, 27, "text");
    if (dart.test(modular_base.Modular.debugMode)) {
      print.debugPrint(text);
    }
  };
  var builder$ = dart.privateName(navigation_listener, "NavigationListener.builder");
  var child$0 = dart.privateName(navigation_listener, "NavigationListener.child");
  navigation_listener.NavigationListener = class NavigationListener extends framework.StatefulWidget {
    get builder() {
      return this[builder$];
    }
    set builder(value) {
      super.builder = value;
    }
    get child() {
      return this[child$0];
    }
    set child(value) {
      super.child = value;
    }
    createState() {
      return new navigation_listener._NavigationListenerState.new();
    }
  };
  (navigation_listener.NavigationListener.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let builder = opts && 'builder' in opts ? opts.builder : null;
    if (builder == null) dart.nullFailed(I[4], 9, 53, "builder");
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[builder$] = builder;
    this[child$0] = child;
    navigation_listener.NavigationListener.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = navigation_listener.NavigationListener.prototype;
  dart.addTypeTests(navigation_listener.NavigationListener);
  dart.addTypeCaches(navigation_listener.NavigationListener);
  dart.setMethodSignature(navigation_listener.NavigationListener, () => ({
    __proto__: dart.getMethods(navigation_listener.NavigationListener.__proto__),
    createState: dart.fnType(navigation_listener._NavigationListenerState, [])
  }));
  dart.setLibraryUri(navigation_listener.NavigationListener, I[5]);
  dart.setFieldSignature(navigation_listener.NavigationListener, () => ({
    __proto__: dart.getFields(navigation_listener.NavigationListener.__proto__),
    builder: dart.finalFieldType(dart.fnType(framework.Widget, [framework.BuildContext, dart.nullable(framework.Widget)])),
    child: dart.finalFieldType(dart.nullable(framework.Widget))
  }));
  navigation_listener._NavigationListenerState = class _NavigationListenerState extends framework.State$(navigation_listener.NavigationListener) {
    listener() {
      this.setState(dart.fn(() => {
      }, T$.VoidTovoid()));
    }
    initState() {
      super.initState();
      modular_base.Modular.to.addListener(dart.bind(this, 'listener'));
    }
    dispose() {
      super.dispose();
      modular_base.Modular.to.removeListener(dart.bind(this, 'listener'));
    }
    build(context) {
      let t2, t1, t0;
      if (context == null) dart.nullFailed(I[4], 34, 29, "context");
      t0 = this.widget;
      t1 = context;
      t2 = this.widget.child;
      return t0.builder(t1, t2);
    }
  };
  (navigation_listener._NavigationListenerState.new = function() {
    navigation_listener._NavigationListenerState.__proto__.new.call(this);
    ;
  }).prototype = navigation_listener._NavigationListenerState.prototype;
  dart.addTypeTests(navigation_listener._NavigationListenerState);
  dart.addTypeCaches(navigation_listener._NavigationListenerState);
  dart.setMethodSignature(navigation_listener._NavigationListenerState, () => ({
    __proto__: dart.getMethods(navigation_listener._NavigationListenerState.__proto__),
    listener: dart.fnType(dart.void, []),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(navigation_listener._NavigationListenerState, I[5]);
  var _store = dart.privateName(modular_state, "_store");
  const _is_ModularState_default = Symbol('_is_ModularState_default');
  modular_state.ModularState$ = dart.generic((TWidget, TBind) => {
    class ModularState extends framework.State$(TWidget) {
      get store() {
        return this[_store];
      }
      get controller() {
        return this[_store];
      }
      dispose() {
        super.dispose();
        let isDisposed = modular_base.Modular.dispose(TBind);
        if (dart.test(isDisposed)) {
          return;
        }
        if (disposable.Disposable.is(this[_store])) {
          disposable.Disposable.as(this[_store]).dispose();
        }
        if (core.Sink.is(this[_store])) {
          core.Sink.as(this[_store]).close();
        } else if (change_notifier.ChangeNotifier.is(this[_store])) {
          change_notifier.ChangeNotifier.as(this[_store]).dispose();
        } else if (T$.StoreOfObject$Object().is(this[_store])) {
          T$.StoreOfObject$Object().as(this[_store]).destroy();
        }
      }
    }
    (ModularState.new = function() {
      this[_store] = modular_base.Modular.get(TBind);
      ModularState.__proto__.new.call(this);
      ;
    }).prototype = ModularState.prototype;
    dart.addTypeTests(ModularState);
    ModularState.prototype[_is_ModularState_default] = true;
    dart.addTypeCaches(ModularState);
    dart.setGetterSignature(ModularState, () => ({
      __proto__: dart.getGetters(ModularState.__proto__),
      store: TBind,
      controller: TBind
    }));
    dart.setLibraryUri(ModularState, I[6]);
    dart.setFieldSignature(ModularState, () => ({
      __proto__: dart.getFields(ModularState.__proto__),
      [_store]: dart.finalFieldType(TBind)
    }));
    return ModularState;
  });
  modular_state.ModularState = modular_state.ModularState$();
  dart.addTypeTests(modular_state.ModularState, _is_ModularState_default);
  var module$0 = dart.privateName(modular_app, "ModularApp.module");
  var child$1 = dart.privateName(modular_app, "ModularApp.child");
  modular_app.ModularApp = class ModularApp extends framework.StatefulWidget {
    get module() {
      return this[module$0];
    }
    set module(value) {
      super.module = value;
    }
    get child() {
      return this[child$1];
    }
    set child(value) {
      super.child = value;
    }
    createState() {
      return new modular_app._ModularAppState.new();
    }
  };
  (modular_app.ModularApp.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let module = opts && 'module' in opts ? opts.module : null;
    if (module == null) dart.nullFailed(I[7], 12, 19, "module");
    let child = opts && 'child' in opts ? opts.child : null;
    if (child == null) dart.nullFailed(I[7], 13, 19, "child");
    let notAllowedParentBinds = opts && 'notAllowedParentBinds' in opts ? opts.notAllowedParentBinds : false;
    if (notAllowedParentBinds == null) dart.nullFailed(I[7], 14, 10, "notAllowedParentBinds");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[module$0] = module;
    this[child$1] = child;
    modular_app.ModularApp.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    modular_base.Modular.flags.experimentalNotAllowedParentBinds = notAllowedParentBinds;
  }).prototype = modular_app.ModularApp.prototype;
  dart.addTypeTests(modular_app.ModularApp);
  dart.addTypeCaches(modular_app.ModularApp);
  dart.setMethodSignature(modular_app.ModularApp, () => ({
    __proto__: dart.getMethods(modular_app.ModularApp.__proto__),
    createState: dart.fnType(modular_app._ModularAppState, [])
  }));
  dart.setLibraryUri(modular_app.ModularApp, I[8]);
  dart.setFieldSignature(modular_app.ModularApp, () => ({
    __proto__: dart.getFields(modular_app.ModularApp.__proto__),
    module: dart.finalFieldType(module.Module),
    child: dart.finalFieldType(framework.Widget)
  }));
  modular_app._ModularAppState = class _ModularAppState extends framework.State$(modular_app.ModularApp) {
    initState() {
      super.initState();
      modular_base.Modular.init(this.widget.module);
    }
    dispose() {
      this.widget.module.cleanInjects();
      if (dart.test(modular_base.Modular.debugMode)) {
        print.debugPrint("-- " + dart.str(dart.toString(dart.runtimeType(this.widget.module))) + " DISPOSED");
      }
      super.dispose();
    }
    build(context) {
      if (context == null) dart.nullFailed(I[7], 40, 29, "context");
      return this.widget.child;
    }
  };
  (modular_app._ModularAppState.new = function() {
    modular_app._ModularAppState.__proto__.new.call(this);
    ;
  }).prototype = modular_app._ModularAppState.prototype;
  dart.addTypeTests(modular_app._ModularAppState);
  dart.addTypeCaches(modular_app._ModularAppState);
  dart.setMethodSignature(modular_app._ModularAppState, () => ({
    __proto__: dart.getMethods(modular_app._ModularAppState.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(modular_app._ModularAppState, I[8]);
  var _name$ = dart.privateName(modular_route, "_name");
  var Duration__duration = dart.privateName(core, "Duration._duration");
  var currentModule$ = dart.privateName(modular_route_impl, "ModularRouteImpl.currentModule");
  var args$ = dart.privateName(modular_route_impl, "ModularRouteImpl.args");
  var children$ = dart.privateName(modular_route_impl, "ModularRouteImpl.children");
  var routerOutlet$ = dart.privateName(modular_route_impl, "ModularRouteImpl.routerOutlet");
  var uri$ = dart.privateName(modular_route_impl, "ModularRouteImpl.uri");
  var modulePath$ = dart.privateName(modular_route_impl, "ModularRouteImpl.modulePath");
  var guardedRoute$ = dart.privateName(modular_route_impl, "ModularRouteImpl.guardedRoute");
  var routerName$ = dart.privateName(modular_route_impl, "ModularRouteImpl.routerName");
  var child$2 = dart.privateName(modular_route_impl, "ModularRouteImpl.child");
  var module$1 = dart.privateName(modular_route_impl, "ModularRouteImpl.module");
  var params$ = dart.privateName(modular_route_impl, "ModularRouteImpl.params");
  var guards$ = dart.privateName(modular_route_impl, "ModularRouteImpl.guards");
  var transition$ = dart.privateName(modular_route_impl, "ModularRouteImpl.transition");
  var customTransition$ = dart.privateName(modular_route_impl, "ModularRouteImpl.customTransition");
  var duration$ = dart.privateName(modular_route_impl, "ModularRouteImpl.duration");
  var routeGenerator$ = dart.privateName(modular_route_impl, "ModularRouteImpl.routeGenerator");
  var transitions$0 = dart.privateName(modular_route_impl, "ModularRouteImpl.transitions");
  var ModularArguments_data = dart.privateName(modular_arguments, "ModularArguments.data");
  var ModularArguments_uri = dart.privateName(modular_arguments, "ModularArguments.uri");
  var ModularArguments_params = dart.privateName(modular_arguments, "ModularArguments.params");
  var guardedRoute = dart.privateName(modular_route, "ModularRoute.guardedRoute");
  var routerOutlet = dart.privateName(modular_route, "ModularRoute.routerOutlet");
  const _is_ModularRoute_default = Symbol('_is_ModularRoute_default');
  modular_route.ModularRoute$ = dart.generic(T => {
    var ModularRouteOfT = () => (ModularRouteOfT = dart.constFn(modular_route.ModularRoute$(T)))();
    class ModularRoute extends core.Object {
      get guardedRoute() {
        return this[guardedRoute];
      }
      set guardedRoute(value) {
        this[guardedRoute] = value;
      }
      get routerOutlet() {
        return this[routerOutlet];
      }
      set routerOutlet(value) {
        super.routerOutlet = value;
      }
      _equals(o) {
        if (o == null) return false;
        if (this === o) return true;
        return ModularRouteOfT().is(o) && o.modulePath == this.modulePath && o.routerName == this.routerName && dart.equals(o.module, this.module);
      }
      get hashCode() {
        return (dart.notNull(dart.hashCode(this.currentModule)) ^ dart.hashCode(this.routerName)) >>> 0;
      }
    }
    (ModularRoute.new = function() {
      this[guardedRoute] = null;
      this[routerOutlet] = T$.JSArrayOfModularRoute().of([]);
      ;
    }).prototype = ModularRoute.prototype;
    dart.addTypeTests(ModularRoute);
    ModularRoute.prototype[_is_ModularRoute_default] = true;
    dart.addTypeCaches(ModularRoute);
    dart.setLibraryUri(ModularRoute, I[11]);
    dart.setFieldSignature(ModularRoute, () => ({
      __proto__: dart.getFields(ModularRoute.__proto__),
      guardedRoute: dart.fieldType(dart.nullable(core.String)),
      routerOutlet: dart.finalFieldType(core.List$(modular_route.ModularRoute))
    }));
    dart.defineExtensionMethods(ModularRoute, ['_equals']);
    dart.defineExtensionAccessors(ModularRoute, ['hashCode']);
    return ModularRoute;
  });
  modular_route.ModularRoute = modular_route.ModularRoute$();
  dart.addTypeTests(modular_route.ModularRoute, _is_ModularRoute_default);
  const _is_ModularRouteImpl_default = Symbol('_is_ModularRouteImpl_default');
  modular_route_impl.ModularRouteImpl$ = dart.generic(T => {
    var PageRouteBuilderOfT = () => (PageRouteBuilderOfT = dart.constFn(pages.PageRouteBuilder$(T)))();
    var FnAndDurationAndRouteSettingsToPageRouteBuilderOfT = () => (FnAndDurationAndRouteSettingsToPageRouteBuilderOfT = dart.constFn(dart.fnType(PageRouteBuilderOfT(), [T$.BuildContextAndModularArgumentsToWidget(), core.Duration, navigator.RouteSettings])))();
    var LinkedMapOfTransitionType$FnAndDurationAndRouteSettingsToPageRouteBuilderOfT = () => (LinkedMapOfTransitionType$FnAndDurationAndRouteSettingsToPageRouteBuilderOfT = dart.constFn(_js_helper.LinkedMap$(modular_route.TransitionType, FnAndDurationAndRouteSettingsToPageRouteBuilderOfT())))();
    var RouteOfT = () => (RouteOfT = dart.constFn(navigator.Route$(T)))();
    var FnAndRouteSettingsToRouteOfT = () => (FnAndRouteSettingsToRouteOfT = dart.constFn(dart.fnType(RouteOfT(), [T$.BuildContextToWidget(), navigator.RouteSettings])))();
    var FnAndRouteSettingsToNRouteOfT = () => (FnAndRouteSettingsToNRouteOfT = dart.constFn(dart.nullable(FnAndRouteSettingsToRouteOfT())))();
    var CompleterOfT = () => (CompleterOfT = dart.constFn(async.Completer$(T)))();
    var CompleterNOfT = () => (CompleterNOfT = dart.constFn(dart.nullable(CompleterOfT())))();
    var ModularRouteImplOfT = () => (ModularRouteImplOfT = dart.constFn(modular_route_impl.ModularRouteImpl$(T)))();
    class ModularRouteImpl extends modular_route.ModularRoute$(T) {
      get currentModule() {
        return this[currentModule$];
      }
      set currentModule(value) {
        super.currentModule = value;
      }
      get args() {
        return this[args$];
      }
      set args(value) {
        super.args = value;
      }
      get children() {
        return this[children$];
      }
      set children(value) {
        super.children = value;
      }
      get routerOutlet() {
        return this[routerOutlet$];
      }
      set routerOutlet(value) {
        super.routerOutlet = value;
      }
      get uri() {
        return this[uri$];
      }
      set uri(value) {
        super.uri = value;
      }
      get modulePath() {
        return this[modulePath$];
      }
      set modulePath(value) {
        super.modulePath = value;
      }
      get guardedRoute() {
        return this[guardedRoute$];
      }
      set guardedRoute(value) {
        super.guardedRoute = value;
      }
      get routerName() {
        return this[routerName$];
      }
      set routerName(value) {
        super.routerName = value;
      }
      get child() {
        return this[child$2];
      }
      set child(value) {
        super.child = value;
      }
      get module() {
        return this[module$1];
      }
      set module(value) {
        super.module = value;
      }
      get params() {
        return this[params$];
      }
      set params(value) {
        super.params = value;
      }
      get guards() {
        return this[guards$];
      }
      set guards(value) {
        super.guards = value;
      }
      get transition() {
        return this[transition$];
      }
      set transition(value) {
        super.transition = value;
      }
      get customTransition() {
        return this[customTransition$];
      }
      set customTransition(value) {
        super.customTransition = value;
      }
      get duration() {
        return this[duration$];
      }
      set duration(value) {
        super.duration = value;
      }
      get routeGenerator() {
        return this[routeGenerator$];
      }
      set routeGenerator(value) {
        super.routeGenerator = value;
      }
      get transitions() {
        return this[transitions$0];
      }
      set transitions(value) {
        super.transitions = value;
      }
      copyWith(opts) {
        let t0, t0$, t0$0, t0$1, t0$2, t0$3, t0$4, t0$5, t0$6, t0$7, t0$8, t0$9, t0$10, t0$11, t0$12, t0$13;
        let child = opts && 'child' in opts ? opts.child : null;
        let routerName = opts && 'routerName' in opts ? opts.routerName : null;
        let module = opts && 'module' in opts ? opts.module : null;
        let guardedRoute = opts && 'guardedRoute' in opts ? opts.guardedRoute : null;
        let children = opts && 'children' in opts ? opts.children : null;
        let routerOutlet = opts && 'routerOutlet' in opts ? opts.routerOutlet : null;
        let currentModule = opts && 'currentModule' in opts ? opts.currentModule : null;
        let params = opts && 'params' in opts ? opts.params : null;
        let uri = opts && 'uri' in opts ? opts.uri : null;
        let guards = opts && 'guards' in opts ? opts.guards : null;
        let transition = opts && 'transition' in opts ? opts.transition : null;
        let routeGenerator = opts && 'routeGenerator' in opts ? opts.routeGenerator : null;
        FnAndRouteSettingsToNRouteOfT().as(routeGenerator);
        let modulePath = opts && 'modulePath' in opts ? opts.modulePath : null;
        let duration = opts && 'duration' in opts ? opts.duration : null;
        let popRoute = opts && 'popRoute' in opts ? opts.popRoute : null;
        CompleterNOfT().as(popRoute);
        let args = opts && 'args' in opts ? opts.args : null;
        let customTransition = opts && 'customTransition' in opts ? opts.customTransition : null;
        return new (ModularRouteImplOfT()).new((t0 = routerName, t0 == null ? this.routerName : t0), {child: (t0$ = child, t0$ == null ? this.child : t0$), args: (t0$0 = args, t0$0 == null ? this.args : t0$0), children: (t0$1 = children, t0$1 == null ? this.children : t0$1), guardedRoute: (t0$2 = guardedRoute, t0$2 == null ? this.guardedRoute : t0$2), module: (t0$3 = module, t0$3 == null ? this.module : t0$3), routerOutlet: (t0$4 = routerOutlet, t0$4 == null ? this.routerOutlet : t0$4), currentModule: (t0$5 = currentModule, t0$5 == null ? this.currentModule : t0$5), params: (t0$6 = params, t0$6 == null ? this.params : t0$6), uri: (t0$7 = uri, t0$7 == null ? this.uri : t0$7), modulePath: (t0$8 = modulePath, t0$8 == null ? this.modulePath : t0$8), guards: (t0$9 = guards, t0$9 == null ? this.guards : t0$9), duration: (t0$10 = duration, t0$10 == null ? this.duration : t0$10), routeGenerator: (t0$11 = routeGenerator, t0$11 == null ? this.routeGenerator : t0$11), transition: (t0$12 = transition, t0$12 == null ? this.transition : t0$12), customTransition: (t0$13 = customTransition, t0$13 == null ? this.customTransition : t0$13)});
      }
      get path() {
        let t0, t0$;
        t0$ = (t0 = this.uri, t0 == null ? null : dart.toString(t0));
        return t0$ == null ? "/" : t0$;
      }
      get queryParamsAll() {
        let t0, t0$;
        t0$ = (t0 = this.uri, t0 == null ? null : t0.queryParametersAll);
        return t0$ == null ? new (T$.IdentityMapOfString$ListOfString()).new() : t0$;
      }
      get queryParams() {
        let t0, t0$;
        t0$ = (t0 = this.uri, t0 == null ? null : t0.queryParameters);
        return t0$ == null ? new (T$.IdentityMapOfString$String()).new() : t0$;
      }
      get fragment() {
        let t0, t0$;
        t0$ = (t0 = this.uri, t0 == null ? null : t0.fragment);
        return t0$ == null ? "" : t0$;
      }
    }
    (ModularRouteImpl.new = function(routerName, opts) {
      if (routerName == null) dart.nullFailed(I[10], 80, 10, "routerName");
      let children = opts && 'children' in opts ? opts.children : C[0] || CT.C0;
      if (children == null) dart.nullFailed(I[10], 81, 10, "children");
      let guardedRoute = opts && 'guardedRoute' in opts ? opts.guardedRoute : null;
      let args = opts && 'args' in opts ? opts.args : C[9] || CT.C9;
      if (args == null) dart.nullFailed(I[10], 83, 10, "args");
      let module = opts && 'module' in opts ? opts.module : null;
      let child = opts && 'child' in opts ? opts.child : null;
      let uri = opts && 'uri' in opts ? opts.uri : null;
      let guards = opts && 'guards' in opts ? opts.guards : null;
      let routerOutlet = opts && 'routerOutlet' in opts ? opts.routerOutlet : C[0] || CT.C0;
      if (routerOutlet == null) dart.nullFailed(I[10], 88, 10, "routerOutlet");
      let params = opts && 'params' in opts ? opts.params : null;
      let currentModule = opts && 'currentModule' in opts ? opts.currentModule : null;
      let transition = opts && 'transition' in opts ? opts.transition : C[7] || CT.C7;
      if (transition == null) dart.nullFailed(I[10], 91, 10, "transition");
      let routeGenerator = opts && 'routeGenerator' in opts ? opts.routeGenerator : null;
      let customTransition = opts && 'customTransition' in opts ? opts.customTransition : null;
      let duration = opts && 'duration' in opts ? opts.duration : C[8] || CT.C8;
      if (duration == null) dart.nullFailed(I[10], 94, 10, "duration");
      let modulePath = opts && 'modulePath' in opts ? opts.modulePath : "/";
      this[transitions$0] = new (LinkedMapOfTransitionType$FnAndDurationAndRouteSettingsToPageRouteBuilderOfT()).from([modular_route.TransitionType.fadeIn, dart.gbind(C[11] || CT.C11, T), modular_route.TransitionType.noTransition, dart.gbind(C[12] || CT.C12, T), modular_route.TransitionType.rightToLeft, dart.gbind(C[13] || CT.C13, T), modular_route.TransitionType.leftToRight, dart.gbind(C[14] || CT.C14, T), modular_route.TransitionType.upToDown, dart.gbind(C[15] || CT.C15, T), modular_route.TransitionType.downToUp, dart.gbind(C[16] || CT.C16, T), modular_route.TransitionType.scale, dart.gbind(C[17] || CT.C17, T), modular_route.TransitionType.rotate, dart.gbind(C[18] || CT.C18, T), modular_route.TransitionType.size, dart.gbind(C[19] || CT.C19, T), modular_route.TransitionType.rightToLeftWithFade, dart.gbind(C[20] || CT.C20, T), modular_route.TransitionType.leftToRightWithFade, dart.gbind(C[21] || CT.C21, T)]);
      this[routerName$] = routerName;
      this[children$] = children;
      this[guardedRoute$] = guardedRoute;
      this[args$] = args;
      this[module$1] = module;
      this[child$2] = child;
      this[uri$] = uri;
      this[guards$] = guards;
      this[routerOutlet$] = routerOutlet;
      this[params$] = params;
      this[currentModule$] = currentModule;
      this[transition$] = transition;
      this[routeGenerator$] = routeGenerator;
      this[customTransition$] = customTransition;
      this[duration$] = duration;
      this[modulePath$] = modulePath;
      if (!dart.test(module == null ? true : children[$isEmpty])) dart.assertFailed("Módulo não pode conter rotas aninhadas (children)", I[10], 96, 16, "module == null ? true : children.isEmpty");
      if (!(transition == modular_route.TransitionType.custom && customTransition != null || transition != modular_route.TransitionType.custom && customTransition == null)) dart.assertFailed(null, I[10], 97, 16, "(transition == TransitionType.custom && customTransition != null) || transition != TransitionType.custom && customTransition == null");
      if (!(module == null && child != null || module != null && child == null)) dart.assertFailed(null, I[10], 98, 16, "(module == null && child != null) || (module != null && child == null)");
      if (!(routerName === "**" ? child != null : true)) dart.assertFailed(null, I[10], 99, 16, "routerName == '**' ? child != null : true");
      ModularRouteImpl.__proto__.new.call(this);
      ;
    }).prototype = ModularRouteImpl.prototype;
    dart.addTypeTests(ModularRouteImpl);
    ModularRouteImpl.prototype[_is_ModularRouteImpl_default] = true;
    dart.addTypeCaches(ModularRouteImpl);
    dart.setMethodSignature(ModularRouteImpl, () => ({
      __proto__: dart.getMethods(ModularRouteImpl.__proto__),
      copyWith: dart.fnType(modular_route.ModularRoute$(T), [], {args: dart.nullable(modular_arguments.ModularArguments), child: dart.nullable(dart.fnType(framework.Widget, [framework.BuildContext, modular_arguments.ModularArguments])), children: dart.nullable(core.List$(modular_route.ModularRoute)), currentModule: dart.nullable(module.Module), customTransition: dart.nullable(custom_transition.CustomTransition), duration: dart.nullable(core.Duration), guardedRoute: dart.nullable(core.String), guards: dart.nullable(core.List$(route_guard.RouteGuard)), module: dart.nullable(module.Module), modulePath: dart.nullable(core.String), params: dart.nullable(core.Map$(core.String, core.String)), popRoute: dart.nullable(core.Object), routeGenerator: dart.nullable(core.Object), routerName: dart.nullable(core.String), routerOutlet: dart.nullable(core.List$(modular_route.ModularRoute)), transition: dart.nullable(modular_route.TransitionType), uri: dart.nullable(core.Uri)}, {})
    }));
    dart.setGetterSignature(ModularRouteImpl, () => ({
      __proto__: dart.getGetters(ModularRouteImpl.__proto__),
      path: dart.nullable(core.String),
      queryParamsAll: core.Map$(core.String, core.List$(core.String)),
      queryParams: core.Map$(core.String, core.String),
      fragment: core.String
    }));
    dart.setLibraryUri(ModularRouteImpl, I[12]);
    dart.setFieldSignature(ModularRouteImpl, () => ({
      __proto__: dart.getFields(ModularRouteImpl.__proto__),
      currentModule: dart.finalFieldType(dart.nullable(module.Module)),
      args: dart.finalFieldType(modular_arguments.ModularArguments),
      children: dart.finalFieldType(core.List$(modular_route.ModularRoute)),
      routerOutlet: dart.finalFieldType(core.List$(modular_route.ModularRoute)),
      uri: dart.finalFieldType(dart.nullable(core.Uri)),
      modulePath: dart.finalFieldType(dart.nullable(core.String)),
      guardedRoute: dart.finalFieldType(dart.nullable(core.String)),
      routerName: dart.finalFieldType(core.String),
      child: dart.finalFieldType(dart.nullable(dart.fnType(framework.Widget, [framework.BuildContext, modular_arguments.ModularArguments]))),
      module: dart.finalFieldType(dart.nullable(module.Module)),
      params: dart.finalFieldType(dart.nullable(core.Map$(core.String, core.String))),
      guards: dart.finalFieldType(dart.nullable(core.List$(route_guard.RouteGuard))),
      transition: dart.finalFieldType(modular_route.TransitionType),
      customTransition: dart.finalFieldType(dart.nullable(custom_transition.CustomTransition)),
      duration: dart.finalFieldType(core.Duration),
      routeGenerator: dart.finalFieldType(dart.nullable(dart.fnType(navigator.Route$(T), [dart.fnType(framework.Widget, [framework.BuildContext]), navigator.RouteSettings]))),
      transitions: dart.finalFieldType(core.Map$(modular_route.TransitionType, dart.fnType(pages.PageRouteBuilder$(T), [dart.fnType(framework.Widget, [framework.BuildContext, modular_arguments.ModularArguments]), core.Duration, navigator.RouteSettings])))
    }));
    return ModularRouteImpl;
  });
  modular_route_impl.ModularRouteImpl = modular_route_impl.ModularRouteImpl$();
  dart.addTypeTests(modular_route_impl.ModularRouteImpl, _is_ModularRouteImpl_default);
  wildcard_route.WildcardRoute = class WildcardRoute extends modular_route_impl.ModularRouteImpl {};
  (wildcard_route.WildcardRoute.new = function(opts) {
    let children = opts && 'children' in opts ? opts.children : C[0] || CT.C0;
    if (children == null) dart.nullFailed(I[9], 11, 24, "children");
    let child = opts && 'child' in opts ? opts.child : null;
    if (child == null) dart.nullFailed(I[9], 12, 63, "child");
    let guards = opts && 'guards' in opts ? opts.guards : null;
    let transition = opts && 'transition' in opts ? opts.transition : C[7] || CT.C7;
    if (transition == null) dart.nullFailed(I[9], 14, 20, "transition");
    let customTransition = opts && 'customTransition' in opts ? opts.customTransition : null;
    let routeGenerator = opts && 'routeGenerator' in opts ? opts.routeGenerator : null;
    let duration = opts && 'duration' in opts ? opts.duration : C[8] || CT.C8;
    if (duration == null) dart.nullFailed(I[9], 17, 14, "duration");
    wildcard_route.WildcardRoute.__proto__.new.call(this, "**", {routerOutlet: T$.JSArrayOfModularRoute().of([]), duration: duration, child: child, routeGenerator: routeGenerator, customTransition: customTransition, children: children, guards: guards, transition: transition});
    ;
  }).prototype = wildcard_route.WildcardRoute.prototype;
  dart.addTypeTests(wildcard_route.WildcardRoute);
  dart.addTypeCaches(wildcard_route.WildcardRoute);
  dart.setLibraryUri(wildcard_route.WildcardRoute, I[13]);
  module_route.ModuleRoute = class ModuleRoute extends modular_route_impl.ModularRouteImpl {};
  (module_route.ModuleRoute.new = function(routerName, opts) {
    if (routerName == null) dart.nullFailed(I[14], 9, 12, "routerName");
    let module = opts && 'module' in opts ? opts.module : null;
    if (module == null) dart.nullFailed(I[14], 10, 21, "module");
    let guards = opts && 'guards' in opts ? opts.guards : null;
    let transition = opts && 'transition' in opts ? opts.transition : C[7] || CT.C7;
    if (transition == null) dart.nullFailed(I[14], 12, 20, "transition");
    let customTransition = opts && 'customTransition' in opts ? opts.customTransition : null;
    let guardedRoute = opts && 'guardedRoute' in opts ? opts.guardedRoute : null;
    let routeGenerator = opts && 'routeGenerator' in opts ? opts.routeGenerator : null;
    let duration = opts && 'duration' in opts ? opts.duration : C[8] || CT.C8;
    if (duration == null) dart.nullFailed(I[14], 16, 14, "duration");
    if (!!routerName[$contains]("/:")) dart.assertFailed("ModuleRoute should not contain dynamic route", I[14], 17, 16, "!routerName.contains('/:')");
    module_route.ModuleRoute.__proto__.new.call(this, routerName, {routerOutlet: T$.JSArrayOfModularRoute().of([]), duration: duration, guardedRoute: guardedRoute, routeGenerator: routeGenerator, module: module, customTransition: customTransition, guards: guards, transition: transition});
    ;
  }).prototype = module_route.ModuleRoute.prototype;
  dart.addTypeTests(module_route.ModuleRoute);
  dart.addTypeCaches(module_route.ModuleRoute);
  dart.setLibraryUri(module_route.ModuleRoute, I[15]);
  transitions$.fadeInTransition = function fadeInTransition(T, builder, transitionDuration, settings) {
    if (builder == null) dart.nullFailed(I[16], 12, 9, "builder");
    if (transitionDuration == null) dart.nullFailed(I[16], 13, 14, "transitionDuration");
    if (settings == null) dart.nullFailed(I[16], 14, 19, "settings");
    return new (pages.PageRouteBuilder$(T)).new({settings: settings, transitionDuration: transitionDuration, pageBuilder: dart.fn((context, __, ___) => {
        if (context == null) dart.nullFailed(I[16], 18, 21, "context");
        if (__ == null) dart.nullFailed(I[16], 18, 30, "__");
        if (___ == null) dart.nullFailed(I[16], 18, 34, "___");
        return builder(context, dart.nullCheck(modular_base.Modular.args));
      }, T$.BuildContextAndAnimationOfdoubleAndAnimationOfdoubleToWidget()), transitionsBuilder: dart.fn((context, animation, secondaryAnimation, child) => {
        if (context == null) dart.nullFailed(I[16], 21, 28, "context");
        if (animation == null) dart.nullFailed(I[16], 21, 37, "animation");
        if (secondaryAnimation == null) dart.nullFailed(I[16], 21, 48, "secondaryAnimation");
        if (child == null) dart.nullFailed(I[16], 21, 68, "child");
        return new transitions.FadeTransition.new({opacity: animation, child: child, $creationLocationd_0dea112b090073317d4: C[22] || CT.C22});
      }, T$.BuildContextAndAnimationOfdoubleAndAnimationOfdouble__ToFadeTransition())});
  };
  transitions$.noTransition = function noTransition(T, builder, transitionDuration, settings) {
    if (builder == null) dart.nullFailed(I[16], 29, 85, "builder");
    if (transitionDuration == null) dart.nullFailed(I[16], 29, 103, "transitionDuration");
    if (settings == null) dart.nullFailed(I[16], 29, 137, "settings");
    return new (pages.PageRouteBuilder$(T)).new({settings: settings, transitionDuration: transitionDuration, pageBuilder: dart.fn((context, __, ___) => {
        if (context == null) dart.nullFailed(I[16], 33, 21, "context");
        if (__ == null) dart.nullFailed(I[16], 33, 30, "__");
        if (___ == null) dart.nullFailed(I[16], 33, 34, "___");
        return builder(context, dart.nullCheck(modular_base.Modular.args));
      }, T$.BuildContextAndAnimationOfdoubleAndAnimationOfdoubleToWidget())});
  };
  transitions$.rightToLeft = function rightToLeft(T, builder, transitionDuration, settings) {
    if (builder == null) dart.nullFailed(I[16], 38, 84, "builder");
    if (transitionDuration == null) dart.nullFailed(I[16], 38, 102, "transitionDuration");
    if (settings == null) dart.nullFailed(I[16], 38, 136, "settings");
    return new (page_transition.PageTransition$(T)).new({settings: settings, duration: transitionDuration, builder: dart.fn(context => {
        if (context == null) dart.nullFailed(I[16], 42, 15, "context");
        return builder(context, dart.nullCheck(modular_base.Modular.args));
      }, T$.BuildContextToWidget()), type: page_transition.PageTransitionType.rightToLeft});
  };
  transitions$.leftToRight = function leftToRight(T, builder, transitionDuration, settings) {
    if (builder == null) dart.nullFailed(I[16], 49, 84, "builder");
    if (transitionDuration == null) dart.nullFailed(I[16], 49, 102, "transitionDuration");
    if (settings == null) dart.nullFailed(I[16], 49, 136, "settings");
    return new (page_transition.PageTransition$(T)).new({settings: settings, duration: transitionDuration, builder: dart.fn(context => {
        if (context == null) dart.nullFailed(I[16], 53, 15, "context");
        return builder(context, dart.nullCheck(modular_base.Modular.args));
      }, T$.BuildContextToWidget()), type: page_transition.PageTransitionType.leftToRight});
  };
  transitions$.upToDown = function upToDown(T, builder, transitionDuration, settings) {
    if (builder == null) dart.nullFailed(I[16], 60, 81, "builder");
    if (transitionDuration == null) dart.nullFailed(I[16], 60, 99, "transitionDuration");
    if (settings == null) dart.nullFailed(I[16], 60, 133, "settings");
    return new (page_transition.PageTransition$(T)).new({settings: settings, duration: transitionDuration, builder: dart.fn(context => {
        if (context == null) dart.nullFailed(I[16], 64, 15, "context");
        return builder(context, dart.nullCheck(modular_base.Modular.args));
      }, T$.BuildContextToWidget()), type: page_transition.PageTransitionType.upToDown});
  };
  transitions$.downToUp = function downToUp(T, builder, transitionDuration, settings) {
    if (builder == null) dart.nullFailed(I[16], 71, 81, "builder");
    if (transitionDuration == null) dart.nullFailed(I[16], 71, 99, "transitionDuration");
    if (settings == null) dart.nullFailed(I[16], 71, 133, "settings");
    return new (page_transition.PageTransition$(T)).new({settings: settings, duration: transitionDuration, builder: dart.fn(context => {
        if (context == null) dart.nullFailed(I[16], 75, 15, "context");
        return builder(context, dart.nullCheck(modular_base.Modular.args));
      }, T$.BuildContextToWidget()), type: page_transition.PageTransitionType.downToUp});
  };
  transitions$.scale = function scale(T, builder, transitionDuration, settings) {
    if (builder == null) dart.nullFailed(I[16], 82, 78, "builder");
    if (transitionDuration == null) dart.nullFailed(I[16], 82, 96, "transitionDuration");
    if (settings == null) dart.nullFailed(I[16], 82, 130, "settings");
    return new (page_transition.PageTransition$(T)).new({settings: settings, duration: transitionDuration, builder: dart.fn(context => {
        if (context == null) dart.nullFailed(I[16], 86, 15, "context");
        return builder(context, dart.nullCheck(modular_base.Modular.args));
      }, T$.BuildContextToWidget()), type: page_transition.PageTransitionType.scale});
  };
  transitions$.rotate = function rotate(T, builder, transitionDuration, settings) {
    if (builder == null) dart.nullFailed(I[16], 93, 79, "builder");
    if (transitionDuration == null) dart.nullFailed(I[16], 93, 97, "transitionDuration");
    if (settings == null) dart.nullFailed(I[16], 93, 131, "settings");
    return new (page_transition.PageTransition$(T)).new({settings: settings, duration: transitionDuration, builder: dart.fn(context => {
        if (context == null) dart.nullFailed(I[16], 97, 15, "context");
        return builder(context, dart.nullCheck(modular_base.Modular.args));
      }, T$.BuildContextToWidget()), type: page_transition.PageTransitionType.rotate});
  };
  transitions$.size = function size(T, builder, transitionDuration, settings) {
    if (builder == null) dart.nullFailed(I[16], 104, 77, "builder");
    if (transitionDuration == null) dart.nullFailed(I[16], 104, 95, "transitionDuration");
    if (settings == null) dart.nullFailed(I[16], 104, 129, "settings");
    return new (page_transition.PageTransition$(T)).new({settings: settings, duration: transitionDuration, builder: dart.fn(context => {
        if (context == null) dart.nullFailed(I[16], 108, 15, "context");
        return builder(context, dart.nullCheck(modular_base.Modular.args));
      }, T$.BuildContextToWidget()), type: page_transition.PageTransitionType.size});
  };
  transitions$.rightToLeftWithFade = function rightToLeftWithFade(T, builder, transitionDuration, settings) {
    if (builder == null) dart.nullFailed(I[16], 115, 92, "builder");
    if (transitionDuration == null) dart.nullFailed(I[16], 115, 110, "transitionDuration");
    if (settings == null) dart.nullFailed(I[16], 115, 144, "settings");
    return new (page_transition.PageTransition$(T)).new({settings: settings, duration: transitionDuration, builder: dart.fn(context => {
        if (context == null) dart.nullFailed(I[16], 119, 15, "context");
        return builder(context, dart.nullCheck(modular_base.Modular.args));
      }, T$.BuildContextToWidget()), type: page_transition.PageTransitionType.rightToLeftWithFade});
  };
  transitions$.leftToRightWithFade = function leftToRightWithFade(T, builder, transitionDuration, settings) {
    if (builder == null) dart.nullFailed(I[16], 126, 92, "builder");
    if (transitionDuration == null) dart.nullFailed(I[16], 126, 110, "transitionDuration");
    if (settings == null) dart.nullFailed(I[16], 126, 144, "settings");
    return new (page_transition.PageTransition$(T)).new({settings: settings, duration: transitionDuration, builder: dart.fn(context => {
        if (context == null) dart.nullFailed(I[16], 130, 15, "context");
        return builder(context, dart.nullCheck(modular_base.Modular.args));
      }, T$.BuildContextToWidget()), type: page_transition.PageTransitionType.leftToRightWithFade});
  };
  const _is_ChildRoute_default = Symbol('_is_ChildRoute_default');
  child_route.ChildRoute$ = dart.generic(T => {
    class ChildRoute extends modular_route_impl.ModularRouteImpl$(T) {}
    (ChildRoute.new = function(routerName, opts) {
      if (routerName == null) dart.nullFailed(I[17], 11, 12, "routerName");
      let children = opts && 'children' in opts ? opts.children : C[0] || CT.C0;
      if (children == null) dart.nullFailed(I[17], 12, 24, "children");
      let child = opts && 'child' in opts ? opts.child : null;
      if (child == null) dart.nullFailed(I[17], 13, 62, "child");
      let guards = opts && 'guards' in opts ? opts.guards : null;
      let guardedRoute = opts && 'guardedRoute' in opts ? opts.guardedRoute : null;
      let transition = opts && 'transition' in opts ? opts.transition : C[7] || CT.C7;
      if (transition == null) dart.nullFailed(I[17], 16, 20, "transition");
      let customTransition = opts && 'customTransition' in opts ? opts.customTransition : null;
      let routeGenerator = opts && 'routeGenerator' in opts ? opts.routeGenerator : null;
      let duration = opts && 'duration' in opts ? opts.duration : C[8] || CT.C8;
      if (duration == null) dart.nullFailed(I[17], 19, 14, "duration");
      ChildRoute.__proto__.new.call(this, routerName, {routerOutlet: T$.JSArrayOfModularRoute().of([]), duration: duration, child: child, guardedRoute: guardedRoute, routeGenerator: routeGenerator, customTransition: customTransition, children: children, guards: guards, transition: transition});
      ;
    }).prototype = ChildRoute.prototype;
    dart.addTypeTests(ChildRoute);
    ChildRoute.prototype[_is_ChildRoute_default] = true;
    dart.addTypeCaches(ChildRoute);
    dart.setLibraryUri(ChildRoute, I[18]);
    return ChildRoute;
  });
  child_route.ChildRoute = child_route.ChildRoute$();
  dart.addTypeTests(child_route.ChildRoute, _is_ChildRoute_default);
  route_guard.RouteGuard = class RouteGuard extends core.Object {};
  (route_guard.RouteGuard.new = function() {
    ;
  }).prototype = route_guard.RouteGuard.prototype;
  dart.addTypeTests(route_guard.RouteGuard);
  dart.addTypeCaches(route_guard.RouteGuard);
  dart.setLibraryUri(route_guard.RouteGuard, I[19]);
  var navigatorKey$ = dart.privateName(router_outlet_delegate, "RouterOutletDelegate.navigatorKey");
  var modularRouterDelegate$ = dart.privateName(router_outlet_delegate, "RouterOutletDelegate.modularRouterDelegate");
  var pages$ = dart.privateName(router_outlet_delegate, "RouterOutletDelegate.pages");
  var __RouterOutletDelegate_path = dart.privateName(router_outlet_delegate, "_#RouterOutletDelegate#path");
  var _getPages = dart.privateName(router_outlet_delegate, "_getPages");
  const RouterDelegate_ChangeNotifier$36 = class RouterDelegate_ChangeNotifier extends router$.RouterDelegate$(modular_route.ModularRoute) {};
  (RouterDelegate_ChangeNotifier$36.new = function() {
    change_notifier.ChangeNotifier.new.call(this);
    RouterDelegate_ChangeNotifier$36.__proto__.new.call(this);
  }).prototype = RouterDelegate_ChangeNotifier$36.prototype;
  dart.applyMixin(RouterDelegate_ChangeNotifier$36, change_notifier.ChangeNotifier);
  const RouterDelegate_PopNavigatorRouterDelegateMixin$36 = class RouterDelegate_PopNavigatorRouterDelegateMixin extends RouterDelegate_ChangeNotifier$36 {};
  (RouterDelegate_PopNavigatorRouterDelegateMixin$36.new = function() {
    RouterDelegate_PopNavigatorRouterDelegateMixin$36.__proto__.new.call(this);
  }).prototype = RouterDelegate_PopNavigatorRouterDelegateMixin$36.prototype;
  dart.applyMixin(RouterDelegate_PopNavigatorRouterDelegateMixin$36, router$.PopNavigatorRouterDelegateMixin$(modular_route.ModularRoute));
  router_outlet_delegate.RouterOutletDelegate = class RouterOutletDelegate extends RouterDelegate_PopNavigatorRouterDelegateMixin$36 {
    get navigatorKey() {
      return this[navigatorKey$];
    }
    set navigatorKey(value) {
      super.navigatorKey = value;
    }
    get modularRouterDelegate() {
      return this[modularRouterDelegate$];
    }
    set modularRouterDelegate(value) {
      super.modularRouterDelegate = value;
    }
    get pages() {
      return this[pages$];
    }
    set pages(value) {
      this[pages$] = value;
    }
    get path() {
      let t0;
      t0 = this[__RouterOutletDelegate_path];
      return t0 == null ? dart.throw(new _internal.LateError.fieldNI("path")) : t0;
    }
    set path(t0) {
      if (t0 == null) dart.nullFailed(I[20], 17, 15, "null");
      this[__RouterOutletDelegate_path] = t0;
    }
    [_getPages]() {
      let t1, t1$;
      if ((t1 = this.modularRouterDelegate.currentConfiguration, t1 == null ? null : t1.path) != this.path) {
        return this.pages;
      }
      if (dart.test(this.modularRouterDelegate.routerOutletPages[$containsKey](this.path))) {
        let list = (t1$ = this.modularRouterDelegate.routerOutletPages[$_get](this.path), t1$ == null ? T$.JSArrayOfModularPage().of([]) : t1$);
        this.pages = (() => {
          let t1 = T$.ListOfModularPage().of(list);
          return t1;
        })();
      }
      return this.pages;
    }
    build(context) {
      if (context == null) dart.nullFailed(I[20], 40, 29, "context");
      let _pages = this[_getPages]();
      return dart.test(_pages[$isEmpty]) ? new material.Material.new({$creationLocationd_0dea112b090073317d4: C[26] || CT.C26}) : new custom_navigator.CustomNavigator.new({key: this.navigatorKey, pages: _pages, onPopPage: dart.fn((route, result) => {
          if (route == null) dart.nullFailed(I[20], 47, 25, "route");
          if (dart.notNull(this.pages[$length]) > 1) {
            let page = modular_page.ModularPage.as(route.settings);
            let path = page.router.path;
            page.completePop(result);
            let trash = T$.JSArrayOfString().of([]);
            this.modularRouterDelegate.injectMap[$forEach](dart.fn((key, module) => {
              if (key == null) dart.nullFailed(I[20], 53, 58, "key");
              if (module == null) dart.nullFailed(I[20], 53, 63, "module");
              module.paths[$remove](path);
              if (dart.test(module.paths[$isEmpty])) {
                module.cleanInjects();
                trash[$add](key);
                modular_base.Modular.debugPrintModular("-- " + dart.str(dart.toString(dart.runtimeType(module))) + " DISPOSED");
              }
            }, T$.StringAndModuleTovoid()));
            for (let key of trash) {
              this.modularRouterDelegate.injectMap[$remove](key);
            }
          }
          return route.didPop(result);
        }, T$.RouteAnddynamicTobool()), $creationLocationd_0dea112b090073317d4: C[28] || CT.C28});
    }
    setNewRoutePath(router) {
      modular_route.ModularRoute.as(router);
      if (router == null) dart.nullFailed(I[20], 73, 45, "router");
      return async.async(dart.void, function* setNewRoutePath() {
        if (!false) dart.assertFailed(null, I[20], 74, 12, "false");
      });
    }
  };
  (router_outlet_delegate.RouterOutletDelegate.new = function(modularRouterDelegate, navigatorKey) {
    if (modularRouterDelegate == null) dart.nullFailed(I[20], 19, 29, "modularRouterDelegate");
    if (navigatorKey == null) dart.nullFailed(I[20], 19, 57, "navigatorKey");
    this[__RouterOutletDelegate_path] = null;
    this[pages$] = T$.JSArrayOfModularPage().of([]);
    this[modularRouterDelegate$] = modularRouterDelegate;
    this[navigatorKey$] = navigatorKey;
    router_outlet_delegate.RouterOutletDelegate.__proto__.new.call(this);
    this.path = dart.nullCheck(dart.nullCheck(this.modularRouterDelegate.currentConfiguration).path);
    this[_getPages]();
  }).prototype = router_outlet_delegate.RouterOutletDelegate.prototype;
  dart.addTypeTests(router_outlet_delegate.RouterOutletDelegate);
  dart.addTypeCaches(router_outlet_delegate.RouterOutletDelegate);
  dart.setMethodSignature(router_outlet_delegate.RouterOutletDelegate, () => ({
    __proto__: dart.getMethods(router_outlet_delegate.RouterOutletDelegate.__proto__),
    [_getPages]: dart.fnType(core.List$(modular_page.ModularPage), []),
    build: dart.fnType(framework.Widget, [framework.BuildContext]),
    setNewRoutePath: dart.fnType(async.Future$(dart.void), [dart.nullable(core.Object)])
  }));
  dart.setGetterSignature(router_outlet_delegate.RouterOutletDelegate, () => ({
    __proto__: dart.getGetters(router_outlet_delegate.RouterOutletDelegate.__proto__),
    path: core.String
  }));
  dart.setSetterSignature(router_outlet_delegate.RouterOutletDelegate, () => ({
    __proto__: dart.getSetters(router_outlet_delegate.RouterOutletDelegate.__proto__),
    path: core.String
  }));
  dart.setLibraryUri(router_outlet_delegate.RouterOutletDelegate, I[21]);
  dart.setFieldSignature(router_outlet_delegate.RouterOutletDelegate, () => ({
    __proto__: dart.getFields(router_outlet_delegate.RouterOutletDelegate.__proto__),
    navigatorKey: dart.finalFieldType(framework.GlobalKey$(navigator.NavigatorState)),
    modularRouterDelegate: dart.finalFieldType(modular_router_delegate.ModularRouterDelegate),
    [__RouterOutletDelegate_path]: dart.fieldType(dart.nullable(core.String)),
    pages: dart.fieldType(core.List$(modular_page.ModularPage))
  }));
  var _searchRoute = dart.privateName(modular_route_information_parser, "_searchRoute");
  var _searchInModule = dart.privateName(modular_route_information_parser, "_searchInModule");
  var _normalizeRoute = dart.privateName(modular_route_information_parser, "_normalizeRoute");
  var _parseUrlParams = dart.privateName(modular_route_information_parser, "_parseUrlParams");
  var _searchWildcard = dart.privateName(modular_route_information_parser, "_searchWildcard");
  var _checkGuard = dart.privateName(modular_route_information_parser, "_checkGuard");
  modular_route_information_parser.ModularRouteInformationParser = class ModularRouteInformationParser extends router$.RouteInformationParser$(modular_route.ModularRoute) {
    parseRouteInformation(routeInformation) {
      if (routeInformation == null) dart.nullFailed(I[22], 13, 63, "routeInformation");
      return async.async(modular_route.ModularRoute, (function* parseRouteInformation() {
        let t6;
        let path = null;
        function path$35get() {
          let t3;
          t3 = path;
          return t3 == null ? dart.throw(new _internal.LateError.localNI("path")) : t3;
        }
        dart.fn(path$35get, T$.VoidToString());
        function path$35set(t4) {
          if (t4 == null) dart.nullFailed(I[22], 14, 23, "null");
          if (path == null)
            return path = t4;
          else
            dart.throw(new _internal.LateError.localAI("path"));
        }
        dart.fn(path$35set, T$.StringTodynamic());
        if (!dart.test(modular_route_information_parser._firstParse)) {
          if (routeInformation.location == null || routeInformation.location === "/") {
            path$35set(modular_base.initialRouteDeclaratedInMaterialApp);
          } else {
            path$35set(dart.nullCheck(routeInformation.location));
          }
          modular_route_information_parser._firstParse = true;
        } else {
          path$35set((t6 = routeInformation.location, t6 == null ? modular_base.initialRouteDeclaratedInMaterialApp : t6));
        }
        let route = (yield this.selectRoute(path$35get()));
        return route;
      }).bind(this));
    }
    restoreRouteInformation(router) {
      modular_route.ModularRoute.as(router);
      if (router == null) dart.nullFailed(I[22], 34, 57, "router");
      return new router$.RouteInformation.new({location: dart.test(router.routerOutlet[$isEmpty]) ? router.path : router.routerOutlet[$last].path});
    }
    [_searchInModule](module, routerName, uri) {
      if (module == null) dart.nullFailed(I[22], 40, 40, "module");
      if (routerName == null) dart.nullFailed(I[22], 40, 55, "routerName");
      if (uri == null) dart.nullFailed(I[22], 40, 71, "uri");
      uri = uri.normalizePath();
      let routers = module.routes[$map](modular_route.ModularRoute, dart.fn(e => {
        if (e == null) dart.nullFailed(I[22], 42, 40, "e");
        return e.copyWith({currentModule: module});
      }, T$.ModularRouteToModularRoute()))[$toList]();
      routers[$sort](dart.fn((preview, actual) => {
        if (preview == null) dart.nullFailed(I[22], 43, 19, "preview");
        if (actual == null) dart.nullFailed(I[22], 43, 28, "actual");
        return preview.routerName[$contains]("/:") ? 1 : 0;
      }, T$.ModularRouteAndModularRouteToint()));
      for (let route of routers) {
        let r = this[_searchRoute](route, routerName, uri);
        if (r != null) {
          return r;
        }
      }
      return null;
    }
    [_normalizeRoute](route, routerName, uri) {
      if (route == null) dart.nullFailed(I[22], 55, 46, "route");
      if (routerName == null) dart.nullFailed(I[22], 55, 60, "routerName");
      if (uri == null) dart.nullFailed(I[22], 55, 76, "uri");
      let router = null;
      if (routerName == uri.path || routerName === dart.str(uri.path) + "/") {
        router = dart.nullCheck(route.module).routes[$firstWhere](dart.fn(element => {
          if (element == null) dart.nullFailed(I[22], 59, 49, "element");
          return element.routerName === "/";
        }, T$.ModularRouteTobool()), {orElse: dart.fn(() => dart.nullCheck(route.module).routes[$_get](0), T$.VoidToModularRoute())});
        if (router.module != null) {
          let _routerName = (dart.notNull(routerName) + dart.notNull(route.routerName))[$replaceFirst]("//", "/");
          router = this[_searchInModule](dart.nullCheck(route.module), _routerName, uri);
        } else {
          router = router.copyWith({uri: uri.replace({path: routerName})});
        }
      } else {
        router = this[_searchInModule](dart.nullCheck(route.module), routerName, uri);
      }
      return router;
    }
    [_searchRoute](route, routerName, uri) {
      let t6, t7, t7$;
      if (route == null) dart.nullFailed(I[22], 72, 43, "route");
      if (routerName == null) dart.nullFailed(I[22], 72, 57, "routerName");
      if (uri == null) dart.nullFailed(I[22], 72, 73, "uri");
      let tempRouteName = (dart.notNull(routerName) + dart.notNull(route.routerName))[$replaceFirst]("//", "/");
      if (route.child == null) {
        let _routerName = (dart.str(routerName) + dart.str(route.routerName) + "/")[$replaceFirst]("//", "/");
        let router = this[_normalizeRoute](route, _routerName, uri);
        if (router != null) {
          router = router.copyWith({modulePath: router.modulePath == null ? "/" : tempRouteName, currentModule: route.currentModule, guardedRoute: (t6 = router.guardedRoute, t6 == null ? route.guardedRoute : t6), guards: (() => {
              let t6 = T$.JSArrayOfRouteGuard().of([]);
              if (route.guards != null) t6[$addAll](dart.nullCheck(route.guards));
              if (router.guards != null) t6[$addAll](dart.nullCheck(router.guards));
              return t6;
            })()});
          if (router.transition == modular_route.TransitionType.defaultTransition) {
            router = router.copyWith({transition: route.transition, customTransition: route.customTransition});
          }
          if (route.module != null) {
            modular_base.Modular.bindModule(dart.nullCheck(route.module), uri.path);
          }
          return router;
        }
      } else {
        if (dart.test(route.children[$isNotEmpty])) {
          for (let routeChild of route.children) {
            let r = this[_searchRoute](routeChild, tempRouteName, uri);
            if (r != null) {
              t7 = r.currentModule;
              t7 == null ? null : t7.paths[$remove](dart.toString(uri));
              r = r.copyWith({modulePath: r.modulePath == route.modulePath ? tempRouteName : r.modulePath});
              route = route.copyWith({args: r.args, routerOutlet: T$.JSArrayOfModularRoute().of([r]), uri: uri.replace({path: tempRouteName})});
              return route;
            }
          }
        }
        if (core.Uri.parse(tempRouteName).pathSegments[$length] != uri.pathSegments[$length]) {
          return null;
        }
        let parseRoute = this[_parseUrlParams](route, tempRouteName, uri);
        if (uri.path != (t7$ = parseRoute.uri, t7$ == null ? null : t7$.path)) {
          return null;
        }
        if (parseRoute.currentModule != null) {
          modular_base.Modular.bindModule(dart.nullCheck(parseRoute.currentModule), uri.path);
        }
        return parseRoute;
      }
      return null;
    }
    resolveOutletModulePath(tempRouteName, outletModulePath) {
      if (tempRouteName == null) dart.nullFailed(I[22], 128, 41, "tempRouteName");
      if (outletModulePath == null) dart.nullFailed(I[22], 128, 63, "outletModulePath");
      let temp = (dart.str(tempRouteName) + "/" + dart.str(outletModulePath))[$replaceAll]("//", "/");
      if (extensions['StringCharacters|get#characters'](temp)[$last] === "/") {
        return temp[$substring](0, temp.length - 1);
      } else {
        return temp;
      }
    }
    prepareToRegex(url) {
      if (url == null) dart.nullFailed(I[22], 137, 32, "url");
      let newUrl = T$.JSArrayOfString().of([]);
      for (let part of url[$split]("/")) {
        let url = part[$contains](":") ? "(.*?)" : part;
        newUrl[$add](url);
      }
      return newUrl[$join]("/");
    }
    [_parseUrlParams](router, routeNamed, uri) {
      if (router == null) dart.nullFailed(I[22], 147, 45, "router");
      if (routeNamed == null) dart.nullFailed(I[22], 147, 60, "routeNamed");
      if (uri == null) dart.nullFailed(I[22], 147, 76, "uri");
      if (routeNamed[$contains]("/:")) {
        let regExp = core.RegExp.new("^" + dart.str(this.prepareToRegex(routeNamed)) + "$", {caseSensitive: true});
        let r = regExp.firstMatch(uri.path);
        if (r != null) {
          let params = new (T$.IdentityMapOfString$String()).new();
          let paramPos = 0;
          let routeParts = routeNamed[$split]("/");
          let pathParts = uri.path[$split]("/");
          for (let routePart of routeParts) {
            if (routePart[$contains](":")) {
              let paramName = routePart[$replaceFirst](":", "");
              if (pathParts[$_get](paramPos)[$isNotEmpty]) {
                params[$_set](paramName, pathParts[$_get](paramPos));
                routeNamed = routeNamed[$replaceFirst](routePart, dart.nullCheck(params[$_get](paramName)));
              }
            }
            paramPos = paramPos + 1;
          }
          uri = uri.replace({path: routeNamed});
          return router.copyWith({args: router.args.copyWith({params: params, uri: uri}), uri: uri});
        }
        uri = uri.replace({path: routeNamed});
        return router.copyWith({args: router.args.copyWith({params: null, uri: uri}), uri: uri});
      }
      uri = uri.replace({path: routeNamed});
      return router.copyWith({uri: uri, args: router.args.copyWith({uri: uri})});
    }
    [_searchWildcard](path, module) {
      let t7, t7$, t7$0, t7$1, t7$2;
      if (path == null) dart.nullFailed(I[22], 185, 12, "path");
      if (module == null) dart.nullFailed(I[22], 186, 12, "module");
      let finded = null;
      let segments = (t7 = path[$split]("/"), (() => {
        t7[$removeLast]();
        return t7;
      })());
      let length = segments[$length];
      for (let i = 0; i < dart.notNull(length); i = i + 1) {
        let localPath = segments[$join]("/");
        let route = this[_searchInModule](module, "", core.Uri.parse(localPath[$isEmpty] ? "/" : localPath));
        if (route != null) {
          if (dart.test(route.children[$isNotEmpty]) && route.routerName !== "/") {
            finded = route.children[$last].routerName === "**" ? route.children[$last] : null;
          } else {
            finded = (t7$ = route.currentModule, t7$ == null ? null : t7$.routes[$last].routerName) === "**" ? (t7$0 = route.currentModule, t7$0 == null ? null : t7$0.routes[$last]) : null;
          }
          t7$1 = route.currentModule;
          t7$1 == null ? null : t7$1.paths[$remove](localPath);
          break;
        } else {
          segments[$removeLast]();
        }
      }
      return (t7$2 = finded, t7$2 == null ? null : t7$2.routerName) === "**" ? finded : null;
    }
    selectRoute(path, opts) {
      if (path == null) dart.nullFailed(I[22], 211, 43, "path");
      let module = opts && 'module' in opts ? opts.module : null;
      let $arguments = opts && 'arguments' in opts ? opts.arguments : null;
      return async.async(modular_route.ModularRoute, (function* selectRoute() {
        let t7, t7$;
        if (path[$isEmpty]) {
          dart.throw(core.Exception.new("Router can not be empty"));
        }
        let uri = core.Uri.parse(path);
        let router = this[_searchInModule]((t7 = module, t7 == null ? modular_base.Modular.initialModule : t7), "", uri);
        if (router != null) {
          router = router.copyWith({args: router.args.copyWith({uri: router.uri, data: $arguments})});
          return this.canActivate(dart.nullCheck(router.path), router);
        } else {
          router = this[_searchWildcard](uri.path, (t7$ = module, t7$ == null ? modular_base.Modular.initialModule : t7$));
          if (router != null) {
            return router;
          }
        }
        dart.throw(new errors.ModularError.new("Route '" + dart.str(uri.path) + "' not found"));
      }).bind(this));
    }
    canActivate(path, router) {
      if (path == null) dart.nullFailed(I[22], 230, 43, "path");
      if (router == null) dart.nullFailed(I[22], 230, 62, "router");
      return async.async(modular_route.ModularRoute, (function* canActivate() {
        let t7;
        if ((t7 = router.guards, t7 == null ? null : t7[$isNotEmpty]) === true) {
          router = (yield this[_checkGuard](path, router));
        } else if (dart.test(router.routerOutlet[$isNotEmpty])) {
          for (let r of router.routerOutlet) {
            yield this[_checkGuard](path, r, true);
          }
        }
        return router;
      }).bind(this));
    }
    [_checkGuard](path, router, isRouterOutlet = false) {
      if (path == null) dart.nullFailed(I[22], 242, 43, "path");
      if (router == null) dart.nullFailed(I[22], 242, 62, "router");
      if (isRouterOutlet == null) dart.nullFailed(I[22], 242, 76, "isRouterOutlet");
      return async.async(modular_route.ModularRoute, (function* _checkGuard() {
        let t7;
        for (let guard of (t7 = router.guards, t7 == null ? [] : t7)) {
          try {
            let result = (yield dart.dsend(guard, 'canActivate', [path, router]));
            if (!dart.dtest(result) && router.guardedRoute != null && !dart.test(isRouterOutlet)) {
              core.print(new errors.ModularError.new(dart.str(path) + " is CAN'T ACTIVATE"));
              core.print("redirect to '" + dart.str(router.guardedRoute) + "'");
              return yield this.selectRoute(dart.nullCheck(router.guardedRoute));
            } else if (!dart.dtest(result) && router.guardedRoute == null) {
              dart.throw(new errors.ModularError.new(dart.str(path) + " is NOT ACTIVATE"));
            }
          } catch (e$) {
            let ex = dart.getThrown(e$);
            if (errors.ModularError.is(ex)) {
              dart.rethrow(e$);
            } else if (core.Object.is(ex)) {
              let e = ex;
              dart.throw(new errors.ModularError.new("RouteGuard error. Check (" + dart.str(path) + ") in " + dart.str(dart.runtimeType(router.currentModule))));
            } else
              throw e$;
          }
        }
        return router;
      }).bind(this));
    }
  };
  (modular_route_information_parser.ModularRouteInformationParser.new = function() {
    modular_route_information_parser.ModularRouteInformationParser.__proto__.new.call(this);
    ;
  }).prototype = modular_route_information_parser.ModularRouteInformationParser.prototype;
  dart.addTypeTests(modular_route_information_parser.ModularRouteInformationParser);
  dart.addTypeCaches(modular_route_information_parser.ModularRouteInformationParser);
  dart.setMethodSignature(modular_route_information_parser.ModularRouteInformationParser, () => ({
    __proto__: dart.getMethods(modular_route_information_parser.ModularRouteInformationParser.__proto__),
    parseRouteInformation: dart.fnType(async.Future$(modular_route.ModularRoute), [router$.RouteInformation]),
    restoreRouteInformation: dart.fnType(router$.RouteInformation, [dart.nullable(core.Object)]),
    [_searchInModule]: dart.fnType(dart.nullable(modular_route.ModularRoute), [module.Module, core.String, core.Uri]),
    [_normalizeRoute]: dart.fnType(dart.nullable(modular_route.ModularRoute), [modular_route.ModularRoute, core.String, core.Uri]),
    [_searchRoute]: dart.fnType(dart.nullable(modular_route.ModularRoute), [modular_route.ModularRoute, core.String, core.Uri]),
    resolveOutletModulePath: dart.fnType(core.String, [core.String, core.String]),
    prepareToRegex: dart.fnType(core.String, [core.String]),
    [_parseUrlParams]: dart.fnType(modular_route.ModularRoute, [modular_route.ModularRoute, core.String, core.Uri]),
    [_searchWildcard]: dart.fnType(dart.nullable(modular_route.ModularRoute), [core.String, module.Module]),
    selectRoute: dart.fnType(async.Future$(modular_route.ModularRoute), [core.String], {arguments: dart.dynamic, module: dart.nullable(module.Module)}, {}),
    canActivate: dart.fnType(async.Future$(modular_route.ModularRoute), [core.String, modular_route.ModularRoute]),
    [_checkGuard]: dart.fnType(async.Future$(modular_route.ModularRoute), [core.String, modular_route.ModularRoute], [core.bool])
  }));
  dart.setLibraryUri(modular_route_information_parser.ModularRouteInformationParser, I[23]);
  dart.defineLazy(modular_route_information_parser, {
    /*modular_route_information_parser._firstParse*/get _firstParse() {
      return false;
    },
    set _firstParse(_) {}
  }, false);
  var router$0 = dart.privateName(modular_page, "ModularPage.router");
  const _is_ModularPage_default = Symbol('_is_ModularPage_default');
  modular_page.ModularPage$ = dart.generic(T => {
    var TN = () => (TN = dart.constFn(dart.nullable(T)))();
    var CompleterOfTN = () => (CompleterOfTN = dart.constFn(async.Completer$(TN())))();
    var PageRouteBuilderOfT = () => (PageRouteBuilderOfT = dart.constFn(pages.PageRouteBuilder$(T)))();
    var RouteOfT = () => (RouteOfT = dart.constFn(navigator.Route$(T)))();
    var CupertinoPageRouteOfT = () => (CupertinoPageRouteOfT = dart.constFn(route.CupertinoPageRoute$(T)))();
    var MaterialPageRouteOfT = () => (MaterialPageRouteOfT = dart.constFn(page.MaterialPageRoute$(T)))();
    var NoTransitionMaterialPageRouteOfT = () => (NoTransitionMaterialPageRouteOfT = dart.constFn(modular_page.NoTransitionMaterialPageRoute$(T)))();
    class ModularPage extends navigator.Page$(T) {
      get router() {
        return this[router$0];
      }
      set router(value) {
        super.router = value;
      }
      waitPop() {
        if (dart.test(modular_page._allCompleters[$containsKey](this[$hashCode]))) {
          return CompleterOfTN().as(modular_page._allCompleters[$_get](this[$hashCode])).future;
        } else {
          modular_page._allCompleters[$_set](this[$hashCode], CompleterOfTN().new());
          return CompleterOfTN().as(modular_page._allCompleters[$_get](this[$hashCode])).future;
        }
      }
      completePop(result) {
        TN().as(result);
        if (dart.test(modular_page._allCompleters[$containsKey](this[$hashCode])) && !dart.test(CompleterOfTN().as(modular_page._allCompleters[$_get](this[$hashCode])).isCompleted)) {
          let complete = CompleterOfTN().as(modular_page._allCompleters[$_get](this[$hashCode]));
          complete.complete(result);
          modular_page._allCompleters[$remove](this[$hashCode]);
        }
      }
      createRoute(context) {
        if (context == null) dart.nullFailed(I[24], 35, 37, "context");
        let page = null;
        function page$35get() {
          let t10;
          t10 = page;
          return t10 == null ? dart.throw(new _internal.LateError.localNI("page")) : t10;
        }
        dart.fn(page$35get, T$.VoidToWidget());
        function page$35set(t11) {
          if (t11 == null) dart.nullFailed(I[24], 36, 23, "null");
          if (page == null)
            return page = t11;
          else
            dart.throw(new _internal.LateError.localAI("page"));
        }
        dart.fn(page$35set, T$.WidgetTodynamic());
        if (this.router.child != null) {
          page$35set(dart.nullCheck(this.router.child)(context, dart.nullCheck(modular_base.Modular.args)));
        } else {
          dart.throw(new errors.ModularError.new("Child not be null"));
        }
        if (this.router.transition == modular_route.TransitionType.custom && this.router.customTransition != null) {
          return new (PageRouteBuilderOfT()).new({pageBuilder: dart.fn((context, _, __) => {
              if (context == null) dart.nullFailed(I[24], 44, 23, "context");
              if (_ == null) dart.nullFailed(I[24], 44, 32, "_");
              if (__ == null) dart.nullFailed(I[24], 44, 35, "__");
              return page$35get();
            }, T$.BuildContextAndAnimationOfdoubleAndAnimationOfdoubleToWidget()), settings: this, transitionsBuilder: dart.nullCheck(this.router.customTransition).transitionBuilder, transitionDuration: dart.nullCheck(this.router.customTransition).transitionDuration});
        } else if (this.router.transition == modular_route.TransitionType.defaultTransition) {
          function widgetBuilder(context) {
            if (context == null) dart.nullFailed(I[24], 51, 41, "context");
            return page$35get();
          }
          dart.fn(widgetBuilder, T$.BuildContextToWidget());
          if (this.router.routeGenerator != null) {
            return RouteOfT().as(dart.nullCheck(this.router.routeGenerator)(widgetBuilder, this));
          }
          if (dart.test(modular_base.Modular.flags.isCupertino)) {
            return new (CupertinoPageRouteOfT()).new({settings: this, builder: widgetBuilder});
          }
          return new (MaterialPageRouteOfT()).new({settings: this, builder: widgetBuilder});
        } else if (this.router.transition == modular_route.TransitionType.noTransition) {
          function widgetBuilder(context) {
            if (context == null) dart.nullFailed(I[24], 68, 41, "context");
            return page$35get();
          }
          dart.fn(widgetBuilder, T$.BuildContextToWidget());
          if (this.router.routeGenerator != null) {
            return RouteOfT().as(dart.nullCheck(this.router.routeGenerator)(widgetBuilder, this));
          }
          return new (NoTransitionMaterialPageRouteOfT()).new({settings: this, builder: widgetBuilder});
        } else {
          let selectTransition = this.router.transitions[$_get](this.router.transition);
          if (selectTransition != null) {
            return RouteOfT().as(selectTransition(dart.fn((_, __) => {
              if (_ == null) dart.nullFailed(I[24], 83, 34, "_");
              if (__ == null) dart.nullFailed(I[24], 83, 37, "__");
              return page$35get();
            }, T$.BuildContextAndModularArgumentsToWidget()), this.router.duration, this));
          } else {
            dart.throw(new errors.ModularError.new("Page Not Found"));
          }
        }
      }
    }
    (ModularPage.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let router = opts && 'router' in opts ? opts.router : null;
      if (router == null) dart.nullFailed(I[24], 15, 45, "router");
      this[router$0] = router;
      ModularPage.__proto__.new.call(this, {key: key, name: router.path, arguments: router.args.data});
      ;
    }).prototype = ModularPage.prototype;
    dart.addTypeTests(ModularPage);
    ModularPage.prototype[_is_ModularPage_default] = true;
    dart.addTypeCaches(ModularPage);
    dart.setMethodSignature(ModularPage, () => ({
      __proto__: dart.getMethods(ModularPage.__proto__),
      waitPop: dart.fnType(async.Future$(dart.nullable(T)), []),
      completePop: dart.fnType(dart.void, [dart.nullable(core.Object)]),
      createRoute: dart.fnType(navigator.Route$(T), [framework.BuildContext])
    }));
    dart.setLibraryUri(ModularPage, I[25]);
    dart.setFieldSignature(ModularPage, () => ({
      __proto__: dart.getFields(ModularPage.__proto__),
      router: dart.finalFieldType(modular_route.ModularRoute)
    }));
    return ModularPage;
  });
  modular_page.ModularPage = modular_page.ModularPage$();
  dart.addTypeTests(modular_page.ModularPage, _is_ModularPage_default);
  var page$ = dart.privateName(modular_page, "ModularRouteSettings.page");
  modular_page.ModularRouteSettings = class ModularRouteSettings extends navigator.Route {
    get page() {
      return this[page$];
    }
    set page(value) {
      super.page = value;
    }
  };
  (modular_page.ModularRouteSettings.new = function(page) {
    if (page == null) dart.nullFailed(I[24], 94, 29, "page");
    this[page$] = page;
    modular_page.ModularRouteSettings.__proto__.new.call(this, {settings: page});
    ;
  }).prototype = modular_page.ModularRouteSettings.prototype;
  dart.addTypeTests(modular_page.ModularRouteSettings);
  dart.addTypeCaches(modular_page.ModularRouteSettings);
  dart.setLibraryUri(modular_page.ModularRouteSettings, I[25]);
  dart.setFieldSignature(modular_page.ModularRouteSettings, () => ({
    __proto__: dart.getFields(modular_page.ModularRouteSettings.__proto__),
    page: dart.finalFieldType(modular_page.ModularPage)
  }));
  const _is_NoTransitionMaterialPageRoute_default = Symbol('_is_NoTransitionMaterialPageRoute_default');
  modular_page.NoTransitionMaterialPageRoute$ = dart.generic(T => {
    class NoTransitionMaterialPageRoute extends page.MaterialPageRoute$(T) {
      get transitionDuration() {
        return core.Duration.zero;
      }
      buildTransitions(context, animation, secondaryAnimation, child) {
        if (context == null) dart.nullFailed(I[24], 109, 40, "context");
        if (animation == null) dart.nullFailed(I[24], 109, 67, "animation");
        if (secondaryAnimation == null) dart.nullFailed(I[24], 109, 96, "secondaryAnimation");
        if (child == null) dart.nullFailed(I[24], 109, 123, "child");
        return child;
      }
    }
    (NoTransitionMaterialPageRoute.new = function(opts) {
      let builder = opts && 'builder' in opts ? opts.builder : null;
      if (builder == null) dart.nullFailed(I[24], 99, 28, "builder");
      let settings = opts && 'settings' in opts ? opts.settings : null;
      let maintainState = opts && 'maintainState' in opts ? opts.maintainState : true;
      if (maintainState == null) dart.nullFailed(I[24], 101, 10, "maintainState");
      let fullscreenDialog = opts && 'fullscreenDialog' in opts ? opts.fullscreenDialog : false;
      if (fullscreenDialog == null) dart.nullFailed(I[24], 102, 10, "fullscreenDialog");
      NoTransitionMaterialPageRoute.__proto__.new.call(this, {builder: builder, maintainState: maintainState, settings: settings, fullscreenDialog: fullscreenDialog});
      ;
    }).prototype = NoTransitionMaterialPageRoute.prototype;
    dart.addTypeTests(NoTransitionMaterialPageRoute);
    NoTransitionMaterialPageRoute.prototype[_is_NoTransitionMaterialPageRoute_default] = true;
    dart.addTypeCaches(NoTransitionMaterialPageRoute);
    dart.setLibraryUri(NoTransitionMaterialPageRoute, I[25]);
    return NoTransitionMaterialPageRoute;
  });
  modular_page.NoTransitionMaterialPageRoute = modular_page.NoTransitionMaterialPageRoute$();
  dart.addTypeTests(modular_page.NoTransitionMaterialPageRoute, _is_NoTransitionMaterialPageRoute_default);
  dart.defineLazy(modular_page, {
    /*modular_page._allCompleters*/get _allCompleters() {
      return new (T$.IdentityMapOfint$Completer()).new();
    }
  }, false);
  custom_navigator.CustomNavigator = class CustomNavigator extends navigator.Navigator {
    createState() {
      return new custom_navigator._CustomNavigatorState.new();
    }
  };
  (custom_navigator.CustomNavigator.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let pages = opts && 'pages' in opts ? opts.pages : C[33] || CT.C33;
    if (pages == null) dart.nullFailed(I[26], 8, 25, "pages");
    let onPopPage = opts && 'onPopPage' in opts ? opts.onPopPage : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    custom_navigator.CustomNavigator.__proto__.new.call(this, {key: key, pages: pages, onPopPage: onPopPage, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = custom_navigator.CustomNavigator.prototype;
  dart.addTypeTests(custom_navigator.CustomNavigator);
  dart.addTypeCaches(custom_navigator.CustomNavigator);
  dart.setMethodSignature(custom_navigator.CustomNavigator, () => ({
    __proto__: dart.getMethods(custom_navigator.CustomNavigator.__proto__),
    createState: dart.fnType(custom_navigator._CustomNavigatorState, [])
  }));
  dart.setLibraryUri(custom_navigator.CustomNavigator, I[27]);
  custom_navigator._CustomNavigatorState = class _CustomNavigatorState extends navigator.NavigatorState {
    pushNamed(T, routeName, opts) {
      if (routeName == null) dart.nullFailed(I[26], 18, 50, "routeName");
      let $arguments = opts && 'arguments' in opts ? opts.arguments : null;
      return modular_base.Modular.to.pushNamed(T, routeName, {arguments: $arguments});
    }
    popAndPushNamed(T, TO, routeName, opts) {
      if (routeName == null) dart.nullFailed(I[26], 25, 14, "routeName");
      let result = opts && 'result' in opts ? opts.result : null;
      let $arguments = opts && 'arguments' in opts ? opts.arguments : null;
      return modular_base.Modular.to.popAndPushNamed(T, TO, routeName, {result: result, arguments: $arguments});
    }
    pushNamedAndRemoveUntil(T, newRouteName, predicate, opts) {
      if (newRouteName == null) dart.nullFailed(I[26], 34, 14, "newRouteName");
      if (predicate == null) dart.nullFailed(I[26], 34, 28, "predicate");
      let $arguments = opts && 'arguments' in opts ? opts.arguments : null;
      return modular_base.Modular.to.pushNamedAndRemoveUntil(T, newRouteName, predicate, {arguments: $arguments});
    }
    pushReplacementNamed(T, TO, routeName, opts) {
      if (routeName == null) dart.nullFailed(I[26], 42, 14, "routeName");
      let result = opts && 'result' in opts ? opts.result : null;
      let $arguments = opts && 'arguments' in opts ? opts.arguments : null;
      return modular_base.Modular.to.pushReplacementNamed(T, TO, routeName, {result: result, arguments: $arguments});
    }
  };
  (custom_navigator._CustomNavigatorState.new = function() {
    custom_navigator._CustomNavigatorState.__proto__.new.call(this);
    ;
  }).prototype = custom_navigator._CustomNavigatorState.prototype;
  dart.addTypeTests(custom_navigator._CustomNavigatorState);
  dart.addTypeCaches(custom_navigator._CustomNavigatorState);
  dart.setMethodSignature(custom_navigator._CustomNavigatorState, () => ({
    __proto__: dart.getMethods(custom_navigator._CustomNavigatorState.__proto__),
    pushNamed: dart.gFnType(T => [async.Future$(dart.nullable(T)), [core.String], {arguments: dart.nullable(core.Object)}, {}], T => [dart.nullable(core.Object)]),
    popAndPushNamed: dart.gFnType((T, TO) => [async.Future$(dart.nullable(T)), [core.String], {arguments: dart.nullable(core.Object), result: dart.nullable(TO)}, {}], (T, TO) => [dart.nullable(core.Object), dart.nullable(core.Object)]),
    pushNamedAndRemoveUntil: dart.gFnType(T => [async.Future$(dart.nullable(T)), [core.String, dart.fnType(core.bool, [navigator.Route])], {arguments: dart.nullable(core.Object)}, {}], T => [dart.nullable(core.Object)]),
    pushReplacementNamed: dart.gFnType((T, TO) => [async.Future$(dart.nullable(T)), [core.String], {arguments: dart.nullable(core.Object), result: dart.nullable(TO)}, {}], (T, TO) => [dart.nullable(core.Object), dart.nullable(core.Object)])
  }));
  dart.setLibraryUri(custom_navigator._CustomNavigatorState, I[27]);
  var navigatorKey = dart.privateName(modular_router_delegate, "ModularRouterDelegate.navigatorKey");
  var parser$ = dart.privateName(modular_router_delegate, "ModularRouterDelegate.parser");
  var injectMap$ = dart.privateName(modular_router_delegate, "ModularRouterDelegate.injectMap");
  var routerOutletPages = dart.privateName(modular_router_delegate, "ModularRouterDelegate.routerOutletPages");
  var _pages = dart.privateName(modular_router_delegate, "_pages");
  var _arguments = dart.privateName(modular_router_delegate, "_arguments");
  var _onPopPage = dart.privateName(modular_router_delegate, "_onPopPage");
  const RouterDelegate_ChangeNotifier$36$ = class RouterDelegate_ChangeNotifier extends router$.RouterDelegate$(modular_route.ModularRoute) {};
  (RouterDelegate_ChangeNotifier$36$.new = function() {
    change_notifier.ChangeNotifier.new.call(this);
    RouterDelegate_ChangeNotifier$36$.__proto__.new.call(this);
  }).prototype = RouterDelegate_ChangeNotifier$36$.prototype;
  dart.applyMixin(RouterDelegate_ChangeNotifier$36$, change_notifier.ChangeNotifier);
  const RouterDelegate_PopNavigatorRouterDelegateMixin$36$ = class RouterDelegate_PopNavigatorRouterDelegateMixin extends RouterDelegate_ChangeNotifier$36$ {};
  (RouterDelegate_PopNavigatorRouterDelegateMixin$36$.new = function() {
    RouterDelegate_PopNavigatorRouterDelegateMixin$36$.__proto__.new.call(this);
  }).prototype = RouterDelegate_PopNavigatorRouterDelegateMixin$36$.prototype;
  dart.applyMixin(RouterDelegate_PopNavigatorRouterDelegateMixin$36$, router$.PopNavigatorRouterDelegateMixin$(modular_route.ModularRoute));
  modular_router_delegate.ModularRouterDelegate = class ModularRouterDelegate extends RouterDelegate_PopNavigatorRouterDelegateMixin$36$ {
    get navigatorKey() {
      return this[navigatorKey];
    }
    set navigatorKey(value) {
      super.navigatorKey = value;
    }
    get parser() {
      return this[parser$];
    }
    set parser(value) {
      super.parser = value;
    }
    get injectMap() {
      return this[injectMap$];
    }
    set injectMap(value) {
      super.injectMap = value;
    }
    get routerOutletPages() {
      return this[routerOutletPages];
    }
    set routerOutletPages(value) {
      super.routerOutletPages = value;
    }
    get navigator() {
      return dart.nullCheck(this.navigatorKey.currentState);
    }
    get currentConfiguration() {
      return dart.test(this[_pages][$isEmpty]) ? null : this[_pages][$last].router;
    }
    build(context) {
      if (context == null) dart.nullFailed(I[28], 36, 29, "context");
      return dart.test(this[_pages][$isEmpty]) ? new material.Material.new({$creationLocationd_0dea112b090073317d4: C[34] || CT.C34}) : new custom_navigator.CustomNavigator.new({key: this.navigatorKey, pages: this[_pages], onPopPage: dart.bind(this, _onPopPage), $creationLocationd_0dea112b090073317d4: C[35] || CT.C35});
    }
    setNewRoutePath(router, opts) {
      modular_route.ModularRoute.as(router);
      if (router == null) dart.nullFailed(I[28], 47, 45, "router");
      let fromModular = opts && 'fromModular' in opts ? opts.fromModular : false;
      if (fromModular == null) dart.nullFailed(I[28], 47, 59, "fromModular");
      let replaceAll = opts && 'replaceAll' in opts ? opts.replaceAll : true;
      if (replaceAll == null) dart.nullFailed(I[28], 47, 97, "replaceAll");
      return async.async(dart.void, (function* setNewRoutePath() {
        let t13, t13$;
        this[_arguments] = router.args;
        let page = new modular_page.ModularPage.new({key: new (T$.ValueKeyOfString()).new("url:" + dart.str((t13$ = (t13 = router.uri, t13 == null ? null : t13.path), t13$ == null ? router.path : t13$))), router: router});
        if (dart.test(this[_pages][$isEmpty])) {
          this[_pages][$add](page);
        } else {
          let _lastPageModule = this[_pages][$last];
          let routeIsInModule = _lastPageModule.router.modulePath == page.router.modulePath;
          let duplicatedPage = false;
          for (let p of this[_pages]) {
            if (dart.equals(p.key, page.key)) {
              duplicatedPage = true;
              break;
            }
          }
          if (dart.test(fromModular) && routeIsInModule && !duplicatedPage) {
            this[_pages][$add](page);
          } else {
            if (dart.test(fromModular)) {
              for (let p of this[_pages]) {
                p.completePop(null);
                this.removeInject(dart.nullCheck(p.router.path));
                for (let r of p.router.routerOutlet) {
                  this.removeInject(dart.nullCheck(r.path));
                }
              }
              if (dart.test(replaceAll)) {
                this[_pages] = T$.JSArrayOfModularPage().of([page]);
              } else if (this[_pages][$last].router.path != router.path) {
                this[_pages][$last] = page;
              } else {
                this[_pages][$last].router.routerOutlet[$clear]();
                this[_pages][$last].router.routerOutlet[$add](router.routerOutlet[$last]);
              }
            } else {
              _lastPageModule.completePop(null);
              this.removeInject(dart.nullCheck(_lastPageModule.router.path));
              for (let r of _lastPageModule.router.routerOutlet) {
                this.removeInject(dart.nullCheck(r.path));
              }
              this[_pages][$remove](_lastPageModule);
            }
          }
        }
        if (dart.test(router.routerOutlet[$isNotEmpty])) {
          this.routerOutletPages[$_set](dart.nullCheck(router.path), router.routerOutlet[$map](modular_page.ModularPage, dart.fn(e => {
            if (e == null) dart.nullFailed(I[28], 108, 66, "e");
            return new modular_page.ModularPage.new({key: new (T$.ValueKeyOfStringN()).new(e.path), router: e});
          }, T$.ModularRouteToModularPage()))[$toList]());
        }
        this.rebuildPages();
      }).bind(this));
    }
    resolverPath(routeName, path) {
      if (routeName == null) dart.nullFailed(I[28], 114, 30, "routeName");
      if (path == null) dart.nullFailed(I[28], 114, 48, "path");
      let uri = core.Uri.parse(path);
      return dart.str(dart.toString(uri.resolve(routeName)));
    }
    navigate(routeName, opts) {
      if (routeName == null) dart.nullFailed(I[28], 120, 32, "routeName");
      let $arguments = opts && 'arguments' in opts ? opts.arguments : null;
      let replaceAll = opts && 'replaceAll' in opts ? opts.replaceAll : true;
      if (replaceAll == null) dart.nullFailed(I[28], 120, 72, "replaceAll");
      return async.async(dart.void, (function* navigate() {
        routeName = this.resolverPath(routeName, this.path);
        if (routeName == this.path) {
          return;
        }
        let router = (yield this.parser.selectRoute(routeName, {arguments: $arguments}));
        this[_arguments] = router.args;
        this.setNewRoutePath(router, {fromModular: true});
      }).bind(this));
    }
    [_onPopPage](route, result) {
      if (route == null) dart.nullFailed(I[28], 131, 34, "route");
      if (!dart.test(route.didPop(result))) {
        return false;
      }
      if (dart.test(route.isFirst)) {
        this.rebuildPages();
        return false;
      }
      let page = modular_page.ModularPage.as(route.settings);
      let path = dart.nullCheck(page.router.path);
      page.completePop(result);
      this.removeInject(path);
      for (let r of page.router.routerOutlet) {
        this.removeInject(dart.nullCheck(r.path));
      }
      this[_pages][$removeLast]();
      this.rebuildPages();
      return true;
    }
    removeInject(path) {
      if (path == null) dart.nullFailed(I[28], 154, 23, "path");
      let trash = T$.JSArrayOfString().of([]);
      this.injectMap[$forEach](dart.fn((key, module) => {
        if (key == null) dart.nullFailed(I[28], 157, 24, "key");
        if (module == null) dart.nullFailed(I[28], 157, 29, "module");
        module.paths[$remove](path);
        if (extensions['StringCharacters|get#characters'](path)[$last] === "/") {
          module.paths[$remove]((dart.str(path) + "/")[$replaceAll]("//", ""));
        }
        if (dart.test(module.paths[$isEmpty])) {
          module.cleanInjects();
          trash[$add](key);
          modular_base.Modular.debugPrintModular("-- " + dart.str(dart.toString(dart.runtimeType(module))) + " DISPOSED");
        }
      }, T$.StringAndModuleTovoid()));
      for (let key of trash) {
        this.injectMap[$remove](key);
      }
    }
    rebuildPages() {
      this[_pages] = T$.ListOfModularPage().from(this[_pages]);
      this.notifyListeners();
    }
    pushNamed(T, routeName, opts) {
      if (routeName == null) dart.nullFailed(I[28], 180, 50, "routeName");
      let $arguments = opts && 'arguments' in opts ? opts.arguments : null;
      let forRoot = opts && 'forRoot' in opts ? opts.forRoot : false;
      if (forRoot == null) dart.nullFailed(I[28], 180, 86, "forRoot");
      return async.async(dart.nullable(T), (function* pushNamed() {
        let t13, t13$, t13$0, t13$1, t13$2;
        routeName = this.resolverPath(routeName, this.path);
        let router = (yield this.parser.selectRoute(routeName, {arguments: $arguments}));
        this[_arguments] = router.args;
        if (dart.test(router.routerOutlet[$isNotEmpty])) {
          let outletRouter = router.routerOutlet[$last].copyWith({args: router.args.copyWith({data: $arguments})});
          this[_arguments] = outletRouter.args;
          let page = new (modular_page.ModularPage$(T)).new({key: new framework.UniqueKey.new(), router: outletRouter});
          if (dart.test(forRoot)) {
            this[_pages][$add](page);
            this.rebuildPages();
            return yield page.waitPop();
          } else if (router.routerName != (t13 = this.currentConfiguration, t13 == null ? null : t13.routerName)) {
            this.routerOutletPages[$_set](dart.nullCheck(router.path), router.routerOutlet[$map](modular_page.ModularPage, dart.fn(e => {
              if (e == null) dart.nullFailed(I[28], 200, 68, "e");
              return new modular_page.ModularPage.new({key: new (T$.ValueKeyOfStringN()).new(e.path), router: e});
            }, T$.ModularRouteToModularPage()))[$toList]());
            let rootPage = new (modular_page.ModularPage$(T)).new({key: new framework.UniqueKey.new(), router: router});
            this[_pages][$add](rootPage);
            this.rebuildPages();
            return yield rootPage.waitPop();
          } else {
            t13$ = this.routerOutletPages[$_get](dart.nullCheck(router.path));
            t13$ == null ? null : t13$[$add](page);
            t13$0 = this.currentConfiguration;
            t13$0 == null ? null : t13$0.routerOutlet[$add](outletRouter);
            this.notifyListeners();
            let result = (yield page.waitPop());
            t13$1 = this.routerOutletPages[$_get](dart.nullCheck(router.path));
            t13$1 == null ? null : t13$1[$removeLast]();
            t13$2 = this.currentConfiguration;
            t13$2 == null ? null : t13$2.routerOutlet[$removeLast]();
            this.notifyListeners();
            return result;
          }
        } else {
          let page = new (modular_page.ModularPage$(T)).new({key: new framework.UniqueKey.new(), router: router});
          this[_pages][$add](page);
          this.rebuildPages();
          return yield page.waitPop();
        }
      }).bind(this));
    }
    pushReplacementNamed(T, TO, routeName, opts) {
      if (routeName == null) dart.nullFailed(I[28], 230, 81, "routeName");
      let result = opts && 'result' in opts ? opts.result : null;
      let $arguments = opts && 'arguments' in opts ? opts.arguments : null;
      let forRoot = opts && 'forRoot' in opts ? opts.forRoot : false;
      if (forRoot == null) dart.nullFailed(I[28], 230, 129, "forRoot");
      return async.async(dart.nullable(T), (function* pushReplacementNamed() {
        let t13, t13$, t13$0, t13$1, t13$2;
        routeName = this.resolverPath(routeName, this.path);
        let router = (yield this.parser.selectRoute(routeName, {arguments: $arguments}));
        this[_arguments] = router.args;
        if (dart.test(router.routerOutlet[$isNotEmpty])) {
          let outletRouter = router.routerOutlet[$last].copyWith({args: router.args.copyWith({data: $arguments})});
          this[_arguments] = outletRouter.args;
          let page = new (modular_page.ModularPage$(T)).new({key: new framework.UniqueKey.new(), router: outletRouter});
          if (dart.test(forRoot)) {
            let lastPage = this[_pages][$last];
            this[_pages][$last] = page;
            this.rebuildPages();
            let result = (yield page.waitPop());
            lastPage.completePop(result);
            return result;
          } else {
            let routeOutletConf = (t13$ = (t13 = this.currentConfiguration, t13 == null ? null : t13.routerOutlet), t13$ == null ? T$.JSArrayOfModularRoute().of([]) : t13$);
            let lastPage = null;
            if (dart.test(routeOutletConf[$isEmpty])) {
              dart.throw(new errors.ModularError.new("Prefer Modular.to.navigate()"));
            } else {
              lastPage = (t13$0 = this.routerOutletPages[$_get](dart.nullCheck(router.path)), t13$0 == null ? null : t13$0[$last]);
              t13$1 = this.routerOutletPages[$_get](dart.nullCheck(router.path));
              t13$1 == null ? null : t13$1[$last] = page;
              t13$2 = this.currentConfiguration;
              t13$2 == null ? null : t13$2.routerOutlet[$last] = outletRouter;
              this.notifyListeners();
            }
            let result = (yield page.waitPop());
            if (lastPage != null) {
              lastPage.completePop(result);
            }
            this.notifyListeners();
            return result;
          }
        } else {
          let page = new (modular_page.ModularPage$(T)).new({key: new framework.UniqueKey.new(), router: router});
          let lastPage = this[_pages][$last];
          this[_pages][$last] = page;
          this.rebuildPages();
          let _lastPagePath = lastPage.router.path;
          if (_lastPagePath != null) {
            this.removeInject(_lastPagePath);
            for (let r of lastPage.router.routerOutlet) {
              this.removeInject(dart.nullCheck(r.path));
            }
          }
          let result = (yield page.waitPop());
          lastPage.completePop(result);
          return result;
        }
      }).bind(this));
    }
    popAndPushNamed(T, TO, routeName, opts) {
      if (routeName == null) dart.nullFailed(I[28], 297, 76, "routeName");
      let result = opts && 'result' in opts ? opts.result : null;
      let $arguments = opts && 'arguments' in opts ? opts.arguments : null;
      let forRoot = opts && 'forRoot' in opts ? opts.forRoot : false;
      if (forRoot == null) dart.nullFailed(I[28], 297, 124, "forRoot");
      return async.async(dart.nullable(T), (function* popAndPushNamed() {
        let t13;
        routeName = this.resolverPath(routeName, this.path);
        let router = (yield this.parser.selectRoute(routeName, {arguments: $arguments}));
        if (!dart.test(forRoot) && dart.test(router.routerOutlet[$isNotEmpty])) {
          t13 = this.routerOutletPages[$_get](dart.nullCheck(router.path));
          t13 == null ? null : t13[$last].completePop(result);
        } else {
          this[_pages][$last].completePop(result);
          this[_pages][$removeLast]();
        }
        return yield this.pushNamed(T, routeName, {arguments: $arguments, forRoot: forRoot});
      }).bind(this));
    }
    canPop() {
      return this.navigator.canPop();
    }
    maybePop(T, result = null) {
      return this.navigator.maybePop(T, result);
    }
    pop(T, result = null) {
      return this.navigator.pop(T, result);
    }
    popUntil(predicate) {
      if (predicate == null) dart.nullFailed(I[28], 322, 38, "predicate");
      return this.navigator.popUntil(predicate);
    }
    pushNamedAndRemoveUntil(T, newRouteName, predicate, opts) {
      if (newRouteName == null) dart.nullFailed(I[28], 325, 64, "newRouteName");
      if (predicate == null) dart.nullFailed(I[28], 325, 99, "predicate");
      let $arguments = opts && 'arguments' in opts ? opts.arguments : null;
      let forRoot = opts && 'forRoot' in opts ? opts.forRoot : false;
      if (forRoot == null) dart.nullFailed(I[28], 325, 135, "forRoot");
      this.popUntil(predicate);
      return this.pushNamed(T, newRouteName, {arguments: $arguments, forRoot: forRoot});
    }
    get modulePath() {
      let t13, t13$, t13$0, t13$1, t13$2;
      return (t13 = this.currentConfiguration, t13 == null ? null : t13.routerOutlet[$isEmpty]) === true ? (t13$0 = (t13$ = this.currentConfiguration, t13$ == null ? null : t13$.modulePath), t13$0 == null ? "/" : t13$0) : (t13$2 = (t13$1 = this.currentConfiguration, t13$1 == null ? null : t13$1.routerOutlet[$last].modulePath), t13$2 == null ? "/" : t13$2);
    }
    get path() {
      let t13, t13$, t13$0, t13$1, t13$2;
      return (t13 = this.currentConfiguration, t13 == null ? null : t13.routerOutlet[$isEmpty]) === true ? (t13$0 = (t13$ = this.currentConfiguration, t13$ == null ? null : t13$.path), t13$0 == null ? "/" : t13$0) : (t13$2 = (t13$1 = this.currentConfiguration, t13$1 == null ? null : t13$1.routerOutlet[$last].path), t13$2 == null ? "/" : t13$2);
    }
    get args() {
      return this[_arguments];
    }
    get localPath() {
      return this.path[$replaceFirst](this.modulePath, "");
    }
    push(T, route) {
      if (route == null) dart.nullFailed(I[28], 342, 47, "route");
      return this.navigator.push(T, route);
    }
  };
  (modular_router_delegate.ModularRouterDelegate.new = function(parser, injectMap) {
    if (parser == null) dart.nullFailed(I[28], 25, 30, "parser");
    if (injectMap == null) dart.nullFailed(I[28], 25, 43, "injectMap");
    this[navigatorKey] = T$.GlobalKeyOfNavigatorState().new();
    this[_pages] = T$.JSArrayOfModularPage().of([]);
    this[routerOutletPages] = new (T$.IdentityMapOfString$ListOfModularPage()).new();
    this[_arguments] = null;
    this[parser$] = parser;
    this[injectMap$] = injectMap;
    modular_router_delegate.ModularRouterDelegate.__proto__.new.call(this);
    ;
  }).prototype = modular_router_delegate.ModularRouterDelegate.prototype;
  dart.addTypeTests(modular_router_delegate.ModularRouterDelegate);
  dart.addTypeCaches(modular_router_delegate.ModularRouterDelegate);
  modular_router_delegate.ModularRouterDelegate[dart.implements] = () => [modular_navigator_interface.IModularNavigator];
  dart.setMethodSignature(modular_router_delegate.ModularRouterDelegate, () => ({
    __proto__: dart.getMethods(modular_router_delegate.ModularRouterDelegate.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext]),
    setNewRoutePath: dart.fnType(async.Future$(dart.void), [dart.nullable(core.Object)], {fromModular: core.bool, replaceAll: core.bool}, {}),
    resolverPath: dart.fnType(core.String, [core.String, core.String]),
    navigate: dart.fnType(async.Future$(dart.void), [core.String], {arguments: dart.dynamic, replaceAll: core.bool}, {}),
    [_onPopPage]: dart.fnType(core.bool, [navigator.Route, dart.dynamic]),
    removeInject: dart.fnType(dart.dynamic, [core.String]),
    rebuildPages: dart.fnType(dart.void, []),
    pushNamed: dart.gFnType(T => [async.Future$(dart.nullable(T)), [core.String], {arguments: dart.nullable(core.Object), forRoot: core.bool}, {}], T => [dart.nullable(core.Object)]),
    pushReplacementNamed: dart.gFnType((T, TO) => [async.Future$(dart.nullable(T)), [core.String], {arguments: dart.nullable(core.Object), forRoot: core.bool, result: dart.nullable(TO)}, {}], (T, TO) => [dart.nullable(core.Object), dart.nullable(core.Object)]),
    popAndPushNamed: dart.gFnType((T, TO) => [async.Future$(dart.nullable(T)), [core.String], {arguments: dart.nullable(core.Object), forRoot: core.bool, result: dart.nullable(TO)}, {}], (T, TO) => [dart.nullable(core.Object), dart.nullable(core.Object)]),
    canPop: dart.fnType(core.bool, []),
    maybePop: dart.gFnType(T => [async.Future$(core.bool), [], [dart.nullable(T)]], T => [core.Object]),
    pop: dart.gFnType(T => [dart.void, [], [dart.nullable(T)]], T => [core.Object]),
    popUntil: dart.fnType(dart.void, [dart.fnType(core.bool, [navigator.Route])]),
    pushNamedAndRemoveUntil: dart.gFnType(T => [async.Future$(dart.nullable(T)), [core.String, dart.fnType(core.bool, [navigator.Route])], {arguments: dart.nullable(core.Object), forRoot: core.bool}, {}], T => [dart.nullable(core.Object)]),
    push: dart.gFnType(T => [async.Future$(dart.nullable(T)), [navigator.Route$(T)]], T => [dart.nullable(core.Object)])
  }));
  dart.setGetterSignature(modular_router_delegate.ModularRouterDelegate, () => ({
    __proto__: dart.getGetters(modular_router_delegate.ModularRouterDelegate.__proto__),
    navigator: navigator.NavigatorState,
    modulePath: core.String,
    path: core.String,
    args: dart.nullable(modular_arguments.ModularArguments),
    localPath: core.String
  }));
  dart.setLibraryUri(modular_router_delegate.ModularRouterDelegate, I[29]);
  dart.setFieldSignature(modular_router_delegate.ModularRouterDelegate, () => ({
    __proto__: dart.getFields(modular_router_delegate.ModularRouterDelegate.__proto__),
    navigatorKey: dart.finalFieldType(framework.GlobalKey$(navigator.NavigatorState)),
    parser: dart.finalFieldType(modular_route_information_parser.ModularRouteInformationParser),
    injectMap: dart.finalFieldType(core.Map$(core.String, module.Module)),
    [_pages]: dart.fieldType(core.List$(modular_page.ModularPage)),
    routerOutletPages: dart.finalFieldType(core.Map$(core.String, core.List$(modular_page.ModularPage))),
    [_arguments]: dart.fieldType(dart.nullable(modular_arguments.ModularArguments))
  }));
  var routerDelegate$ = dart.privateName(modular_impl, "ModularImpl.routerDelegate");
  var injectMap$0 = dart.privateName(modular_impl, "ModularImpl.injectMap");
  var flags$ = dart.privateName(modular_impl, "ModularImpl.flags");
  var navigatorDelegate = dart.privateName(modular_impl, "ModularImpl.navigatorDelegate");
  var _overrideBinds = dart.privateName(modular_impl, "_overrideBinds");
  var _findExistingInstance = dart.privateName(modular_impl, "_findExistingInstance");
  var _getInjectableObject = dart.privateName(modular_impl, "_getInjectableObject");
  var _removeInjectableObject = dart.privateName(modular_impl, "_removeInjectableObject");
  modular_impl.ModularImpl = class ModularImpl extends core.Object {
    get routerDelegate() {
      return this[routerDelegate$];
    }
    set routerDelegate(value) {
      super.routerDelegate = value;
    }
    get injectMap() {
      return this[injectMap$0];
    }
    set injectMap(value) {
      super.injectMap = value;
    }
    get flags() {
      return this[flags$];
    }
    set flags(value) {
      super.flags = value;
    }
    get navigatorDelegate() {
      return this[navigatorDelegate];
    }
    set navigatorDelegate(value) {
      this[navigatorDelegate] = value;
    }
    overrideBinds(binds) {
      if (binds == null) dart.nullFailed(I[30], 26, 33, "binds");
      this[_overrideBinds] = binds;
    }
    get args() {
      return this.routerDelegate.args;
    }
    get initialModule() {
      return modular_impl._initialModule;
    }
    debugPrintModular(text) {
      if (text == null) dart.nullFailed(I[30], 43, 33, "text");
      if (dart.test(modular_base.Modular.debugMode)) {
        print.debugPrint(text);
      }
    }
    bindModule(module, path = "") {
      let t13, t13$, t13$0;
      if (module == null) dart.nullFailed(I[30], 50, 26, "module");
      if (path == null) dart.nullFailed(I[30], 50, 42, "path");
      let name = dart.toString(dart.runtimeType(module));
      if (!dart.test(this.injectMap[$containsKey](name))) {
        module.paths[$add](path);
        this.injectMap[$_set](name, module);
        module.instance();
        this.debugPrintModular("-- " + dart.str(dart.toString(dart.runtimeType(module))) + " INITIALIZED");
      } else {
        let _paths = (t13 = this.injectMap[$_get](name), t13 == null ? null : t13.paths);
        if ((t13$ = _paths, t13$ == null ? null : t13$[$last]) != path) {
          t13$0 = _paths;
          t13$0 == null ? null : t13$0[$add](path);
        }
      }
    }
    init(module) {
      if (module == null) dart.nullFailed(I[30], 65, 20, "module");
      modular_impl._initialModule = module;
      this.bindModule(module, "global==");
    }
    get to() {
      let t13;
      t13 = this.navigatorDelegate;
      return t13 == null ? this.routerDelegate : t13;
    }
    get debugMode() {
      return !false;
    }
    get initialRoute() {
      return "/";
    }
    [_findExistingInstance](B) {
      for (let module of this.injectMap[$values]) {
        let bind = module.getInjectedBind(B);
        if (bind != null) {
          return bind;
        }
      }
      return null;
    }
    get(B, opts) {
      let t13, t14, t13$, t13$0;
      let typesInRequestList = opts && 'typesInRequestList' in opts ? opts.typesInRequestList : null;
      let defaultValue = opts && 'defaultValue' in opts ? opts.defaultValue : null;
      let typesInRequest = (t13 = typesInRequestList, t13 == null ? T$.JSArrayOfType().of([]) : t13);
      if (dart.test(modular_base.Modular.flags.experimentalNotAllowedParentBinds)) {
        let module = (t13$0 = (t13$ = this.routerDelegate.currentConfiguration, t13$ == null ? null : (t14 = t13$.currentModule, t14 == null ? null : dart.toString(dart.runtimeType(t14)))), t13$0 == null ? "=global" : t13$0);
        let bind = dart.nullCheck(this.injectMap[$_get](module)).binds[$firstWhere](dart.fn(b => {
          if (b == null) dart.nullFailed(I[30], 94, 55, "b");
          return dart.fnType(B, [inject.Inject]).is(b.inject);
        }, T$.BindOfObjectTobool()), {orElse: dart.fn(() => new bind$.BindEmpty.new(), T$.VoidToBindEmpty())});
        if (bind$.BindEmpty.is(bind)) {
          dart.throw(new errors.ModularError.new("\"" + dart.str(dart.wrapType(B).toString()) + "\" not found in \"" + dart.str(module) + "\" module"));
        }
      }
      let result = this[_findExistingInstance](B);
      if (result != null) {
        return result;
      }
      for (let key of this.injectMap[$keys]) {
        let value = this[_getInjectableObject](B, key, {typesInRequestList: typesInRequest, checkKey: false});
        if (value != null) {
          return value;
        }
      }
      if (result == null && defaultValue != null) {
        return defaultValue;
      }
      dart.throw(new errors.ModularError.new(dart.str(dart.wrapType(B).toString()) + " not found"));
    }
    [_getInjectableObject](B, tag, opts) {
      let t13, t13$;
      if (tag == null) dart.nullFailed(I[30], 120, 12, "tag");
      let typesInRequestList = opts && 'typesInRequestList' in opts ? opts.typesInRequestList : null;
      let checkKey = opts && 'checkKey' in opts ? opts.checkKey : true;
      if (checkKey == null) dart.nullFailed(I[30], 122, 10, "checkKey");
      let value = null;
      let typesInRequest = (t13 = typesInRequestList, t13 == null ? T$.JSArrayOfType().of([]) : t13);
      if (!dart.test(checkKey) || dart.test(this.injectMap[$containsKey](tag))) {
        value = (t13$ = this.injectMap[$_get](tag), t13$ == null ? null : t13$.getBind(B, {typesInRequest: typesInRequest}));
      }
      return value;
    }
    dispose(B) {
      let t13, t13$;
      let isDisposed = false;
      let check = false;
      for (let key of this.injectMap[$keys]) {
        if (check) break;
        let _binds = (t13$ = (t13 = this.injectMap[$_get](key), t13 == null ? null : t13.binds), t13$ == null ? T$.JSArrayOfBindOfObject().of([]) : t13$);
        for (let element of _binds) {
          if (dart.fnType(B, [inject.Inject]).is(element.inject)) {
            check = true;
            break;
          }
        }
      }
      if (!check) return true;
      for (let key of this.injectMap[$keys]) {
        if (dart.test(this[_removeInjectableObject](B, key))) {
          isDisposed = true;
          break;
        }
      }
      return isDisposed;
    }
    [_removeInjectableObject](B, tag) {
      let t13, t13$;
      if (tag == null) dart.nullFailed(I[30], 166, 42, "tag");
      t13$ = (t13 = this.injectMap[$_get](tag), t13 == null ? null : t13.remove(B));
      return t13$ == null ? false : t13$;
    }
    bind(T, bind) {
      let t13;
      if (bind == null) dart.nullFailed(I[30], 171, 36, "bind");
      return new inject.Inject.new({overrideBinds: (t13 = this[_overrideBinds], t13 == null ? T$.JSArrayOfBindOfObject().of([]) : t13)}).get(T, bind);
    }
  };
  (modular_impl.ModularImpl.new = function(opts) {
    let flags = opts && 'flags' in opts ? opts.flags : null;
    if (flags == null) dart.nullFailed(I[30], 34, 19, "flags");
    let routerDelegate = opts && 'routerDelegate' in opts ? opts.routerDelegate : null;
    if (routerDelegate == null) dart.nullFailed(I[30], 35, 19, "routerDelegate");
    let injectMap = opts && 'injectMap' in opts ? opts.injectMap : null;
    if (injectMap == null) dart.nullFailed(I[30], 36, 19, "injectMap");
    this[navigatorDelegate] = null;
    this[_overrideBinds] = null;
    this[flags$] = flags;
    this[routerDelegate$] = routerDelegate;
    this[injectMap$0] = injectMap;
    ;
  }).prototype = modular_impl.ModularImpl.prototype;
  dart.addTypeTests(modular_impl.ModularImpl);
  dart.addTypeCaches(modular_impl.ModularImpl);
  modular_impl.ModularImpl[dart.implements] = () => [modular_interface.ModularInterface];
  dart.setMethodSignature(modular_impl.ModularImpl, () => ({
    __proto__: dart.getMethods(modular_impl.ModularImpl.__proto__),
    overrideBinds: dart.fnType(dart.void, [core.List$(bind$.Bind$(core.Object))]),
    debugPrintModular: dart.fnType(dart.void, [core.String]),
    bindModule: dart.fnType(dart.void, [module.Module], [core.String]),
    init: dart.fnType(dart.void, [module.Module]),
    [_findExistingInstance]: dart.gFnType(B => [dart.nullable(B), []], B => [core.Object]),
    get: dart.gFnType(B => [B, [], {defaultValue: dart.nullable(B), typesInRequestList: dart.nullable(core.List$(core.Type))}, {}], B => [core.Object]),
    [_getInjectableObject]: dart.gFnType(B => [dart.nullable(B), [core.String], {checkKey: core.bool, typesInRequestList: dart.nullable(core.List$(core.Type))}, {}], B => [core.Object]),
    dispose: dart.gFnType(B => [core.bool, []], B => [core.Object]),
    [_removeInjectableObject]: dart.gFnType(B => [core.bool, [core.String]], B => [dart.nullable(core.Object)]),
    bind: dart.gFnType(T => [T, [bind$.Bind$(T)]], T => [core.Object])
  }));
  dart.setGetterSignature(modular_impl.ModularImpl, () => ({
    __proto__: dart.getGetters(modular_impl.ModularImpl.__proto__),
    args: dart.nullable(modular_arguments.ModularArguments),
    initialModule: module.Module,
    to: modular_navigator_interface.IModularNavigator,
    debugMode: core.bool,
    initialRoute: core.String
  }));
  dart.setLibraryUri(modular_impl.ModularImpl, I[31]);
  dart.setFieldSignature(modular_impl.ModularImpl, () => ({
    __proto__: dart.getFields(modular_impl.ModularImpl.__proto__),
    routerDelegate: dart.finalFieldType(modular_router_delegate.ModularRouterDelegate),
    injectMap: dart.finalFieldType(core.Map$(core.String, module.Module)),
    flags: dart.finalFieldType(modular_base.ModularFlags),
    navigatorDelegate: dart.fieldType(dart.nullable(modular_navigator_interface.IModularNavigator)),
    [_overrideBinds]: dart.fieldType(dart.nullable(core.List$(bind$.Bind$(core.Object))))
  }));
  dart.copyProperties(modular_impl, {
    get _initialModule() {
      let t13;
      t13 = modular_impl['_#_initialModule'];
      return t13 == null ? dart.throw(new _internal.LateError.fieldNI("_initialModule")) : t13;
    },
    set _initialModule(t13) {
      if (t13 == null) dart.nullFailed(I[30], 13, 13, "null");
      modular_impl['_#_initialModule'] = t13;
    }
  });
  dart.defineLazy(modular_impl, {
    /*modular_impl['_#_initialModule']*/get ['_#_initialModule']() {
      return null;
    },
    set ['_#_initialModule'](_) {}
  }, false);
  var navigatorDelegate$ = dart.privateName(modular_interface, "ModularInterface.navigatorDelegate");
  modular_interface.ModularInterface = class ModularInterface extends core.Object {
    get navigatorDelegate() {
      return this[navigatorDelegate$];
    }
    set navigatorDelegate(value) {
      this[navigatorDelegate$] = value;
    }
  };
  (modular_interface.ModularInterface.new = function() {
    this[navigatorDelegate$] = null;
    ;
  }).prototype = modular_interface.ModularInterface.prototype;
  dart.addTypeTests(modular_interface.ModularInterface);
  dart.addTypeCaches(modular_interface.ModularInterface);
  dart.setLibraryUri(modular_interface.ModularInterface, I[32]);
  dart.setFieldSignature(modular_interface.ModularInterface, () => ({
    __proto__: dart.getFields(modular_interface.ModularInterface.__proto__),
    navigatorDelegate: dart.fieldType(dart.nullable(modular_navigator_interface.IModularNavigator))
  }));
  var experimentalNotAllowedParentBinds$ = dart.privateName(modular_base, "ModularFlags.experimentalNotAllowedParentBinds");
  var isCupertino$ = dart.privateName(modular_base, "ModularFlags.isCupertino");
  modular_base.ModularFlags = class ModularFlags extends core.Object {
    get experimentalNotAllowedParentBinds() {
      return this[experimentalNotAllowedParentBinds$];
    }
    set experimentalNotAllowedParentBinds(value) {
      this[experimentalNotAllowedParentBinds$] = value;
    }
    get isCupertino() {
      return this[isCupertino$];
    }
    set isCupertino(value) {
      this[isCupertino$] = value;
    }
  };
  (modular_base.ModularFlags.new = function(opts) {
    let experimentalNotAllowedParentBinds = opts && 'experimentalNotAllowedParentBinds' in opts ? opts.experimentalNotAllowedParentBinds : false;
    if (experimentalNotAllowedParentBinds == null) dart.nullFailed(I[33], 16, 10, "experimentalNotAllowedParentBinds");
    let isCupertino = opts && 'isCupertino' in opts ? opts.isCupertino : false;
    if (isCupertino == null) dart.nullFailed(I[33], 17, 10, "isCupertino");
    this[experimentalNotAllowedParentBinds$] = experimentalNotAllowedParentBinds;
    this[isCupertino$] = isCupertino;
    ;
  }).prototype = modular_base.ModularFlags.prototype;
  dart.addTypeTests(modular_base.ModularFlags);
  dart.addTypeCaches(modular_base.ModularFlags);
  dart.setLibraryUri(modular_base.ModularFlags, I[34]);
  dart.setFieldSignature(modular_base.ModularFlags, () => ({
    __proto__: dart.getFields(modular_base.ModularFlags.__proto__),
    experimentalNotAllowedParentBinds: dart.fieldType(core.bool),
    isCupertino: dart.fieldType(core.bool)
  }));
  modular_base.RouterOutlet = class RouterOutlet extends framework.StatefulWidget {
    createState() {
      return new modular_base._RouterOutletState.new();
    }
  };
  (modular_base.RouterOutlet.new = function(opts) {
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    modular_base.RouterOutlet.__proto__.new.call(this, {$creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = modular_base.RouterOutlet.prototype;
  dart.addTypeTests(modular_base.RouterOutlet);
  dart.addTypeCaches(modular_base.RouterOutlet);
  dart.setMethodSignature(modular_base.RouterOutlet, () => ({
    __proto__: dart.getMethods(modular_base.RouterOutlet.__proto__),
    createState: dart.fnType(modular_base._RouterOutletState, [])
  }));
  dart.setLibraryUri(modular_base.RouterOutlet, I[34]);
  var ___RouterOutletState_navigatorKey = dart.privateName(modular_base, "_#_RouterOutletState#navigatorKey");
  var ___RouterOutletState_delegate = dart.privateName(modular_base, "_#_RouterOutletState#delegate");
  var ___RouterOutletState__backButtonDispatcher = dart.privateName(modular_base, "_#_RouterOutletState#_backButtonDispatcher");
  var _backButtonDispatcher = dart.privateName(modular_base, "_backButtonDispatcher");
  var _listener = dart.privateName(modular_base, "_listener");
  modular_base._RouterOutletState = class _RouterOutletState extends framework.State$(modular_base.RouterOutlet) {
    get navigatorKey() {
      let t14;
      t14 = this[___RouterOutletState_navigatorKey];
      return t14 == null ? dart.throw(new _internal.LateError.fieldNI("navigatorKey")) : t14;
    }
    set navigatorKey(t14) {
      if (t14 == null) dart.nullFailed(I[33], 118, 34, "null");
      this[___RouterOutletState_navigatorKey] = t14;
    }
    get delegate() {
      let t15;
      t15 = this[___RouterOutletState_delegate];
      return t15 == null ? dart.throw(new _internal.LateError.fieldNI("delegate")) : t15;
    }
    set delegate(t15) {
      if (t15 == null) dart.nullFailed(I[33], 119, 29, "null");
      this[___RouterOutletState_delegate] = t15;
    }
    get [_backButtonDispatcher]() {
      let t16;
      t16 = this[___RouterOutletState__backButtonDispatcher];
      return t16 == null ? dart.throw(new _internal.LateError.fieldNI("_backButtonDispatcher")) : t16;
    }
    set [_backButtonDispatcher](t16) {
      if (t16 == null) dart.nullFailed(I[33], 120, 34, "null");
      this[___RouterOutletState__backButtonDispatcher] = t16;
    }
    initState() {
      super.initState();
      this.navigatorKey = T$.GlobalKeyOfNavigatorState().new();
      this.delegate = new router_outlet_delegate.RouterOutletDelegate.new(modular_base._routerDelegate, this.navigatorKey);
      modular_base.Modular.to.addListener(dart.bind(this, _listener));
    }
    [_listener]() {
      this.setState(dart.fn(() => {
      }, T$.VoidTovoid()));
    }
    didChangeDependencies() {
      super.didChangeDependencies();
      let router = router$.Router.of(this.context);
      this[_backButtonDispatcher] = dart.nullCheck(router.backButtonDispatcher).createChildBackButtonDispatcher();
    }
    dispose() {
      super.dispose();
      modular_base.Modular.to.removeListener(dart.bind(this, _listener));
    }
    build(context) {
      if (context == null) dart.nullFailed(I[33], 148, 29, "context");
      this[_backButtonDispatcher].takePriority();
      return new (T$.RouterOfModularRoute()).new({routerDelegate: this.delegate, backButtonDispatcher: this[_backButtonDispatcher], $creationLocationd_0dea112b090073317d4: C[40] || CT.C40});
    }
  };
  (modular_base._RouterOutletState.new = function() {
    this[___RouterOutletState_navigatorKey] = null;
    this[___RouterOutletState_delegate] = null;
    this[___RouterOutletState__backButtonDispatcher] = null;
    modular_base._RouterOutletState.__proto__.new.call(this);
    ;
  }).prototype = modular_base._RouterOutletState.prototype;
  dart.addTypeTests(modular_base._RouterOutletState);
  dart.addTypeCaches(modular_base._RouterOutletState);
  dart.setMethodSignature(modular_base._RouterOutletState, () => ({
    __proto__: dart.getMethods(modular_base._RouterOutletState.__proto__),
    [_listener]: dart.fnType(dart.void, []),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setGetterSignature(modular_base._RouterOutletState, () => ({
    __proto__: dart.getGetters(modular_base._RouterOutletState.__proto__),
    navigatorKey: framework.GlobalKey$(navigator.NavigatorState),
    delegate: router_outlet_delegate.RouterOutletDelegate,
    [_backButtonDispatcher]: router$.ChildBackButtonDispatcher
  }));
  dart.setSetterSignature(modular_base._RouterOutletState, () => ({
    __proto__: dart.getSetters(modular_base._RouterOutletState.__proto__),
    navigatorKey: framework.GlobalKey$(navigator.NavigatorState),
    delegate: router_outlet_delegate.RouterOutletDelegate,
    [_backButtonDispatcher]: router$.ChildBackButtonDispatcher
  }));
  dart.setLibraryUri(modular_base._RouterOutletState, I[34]);
  dart.setFieldSignature(modular_base._RouterOutletState, () => ({
    __proto__: dart.getFields(modular_base._RouterOutletState.__proto__),
    [___RouterOutletState_navigatorKey]: dart.fieldType(dart.nullable(framework.GlobalKey$(navigator.NavigatorState))),
    [___RouterOutletState_delegate]: dart.fieldType(dart.nullable(router_outlet_delegate.RouterOutletDelegate)),
    [___RouterOutletState__backButtonDispatcher]: dart.fieldType(dart.nullable(router$.ChildBackButtonDispatcher))
  }));
  modular_base['ModularExtensionMaterial|modular'] = function ModularExtensionMaterial$124modular($this) {
    let t18;
    if ($this == null) dart.nullFailed(I[33], 38, 15, "#this");
    modular_base.initialRouteDeclaratedInMaterialApp = (t18 = $this.initialRoute, t18 == null ? "/" : t18);
    let app = new app$.MaterialApp.router({key: $this.key, scaffoldMessengerKey: $this.scaffoldMessengerKey, routeInformationProvider: $this.routeInformationProvider, backButtonDispatcher: $this.backButtonDispatcher, builder: $this.builder, title: $this.title, onGenerateTitle: $this.onGenerateTitle, color: $this.color, theme: $this.theme, darkTheme: $this.darkTheme, highContrastTheme: $this.highContrastTheme, highContrastDarkTheme: $this.highContrastDarkTheme, themeMode: $this.themeMode, locale: $this.locale, localizationsDelegates: $this.localizationsDelegates, localeListResolutionCallback: $this.localeListResolutionCallback, localeResolutionCallback: $this.localeResolutionCallback, supportedLocales: $this.supportedLocales, debugShowMaterialGrid: $this.debugShowMaterialGrid, showPerformanceOverlay: $this.showPerformanceOverlay, checkerboardRasterCacheImages: $this.checkerboardRasterCacheImages, checkerboardOffscreenLayers: $this.checkerboardOffscreenLayers, showSemanticsDebugger: $this.showSemanticsDebugger, debugShowCheckedModeBanner: $this.debugShowCheckedModeBanner, shortcuts: $this.shortcuts, actions: $this.actions, restorationScopeId: $this.restorationScopeId, routeInformationParser: modular_base._routeInformationParser, routerDelegate: modular_base._routerDelegate, $creationLocationd_0dea112b090073317d4: C[44] || CT.C44});
    return app;
  };
  modular_base['ModularExtensionMaterial|get#modular'] = function ModularExtensionMaterial$124get$35modular($this) {
    if ($this == null) dart.nullFailed(I[33], 38, 15, "#this");
    return dart.fn(() => modular_base['ModularExtensionMaterial|modular']($this), T$.VoidToMaterialApp());
  };
  modular_base['ModularExtensionCupertino|modular'] = function ModularExtensionCupertino$124modular($this) {
    let t20;
    if ($this == null) dart.nullFailed(I[33], 78, 16, "#this");
    modular_base._modularFlags.isCupertino = true;
    modular_base.initialRouteDeclaratedInMaterialApp = (t20 = $this.initialRoute, t20 == null ? "/" : t20);
    let app = new app$0.CupertinoApp.router({key: $this.key, routeInformationProvider: $this.routeInformationProvider, backButtonDispatcher: $this.backButtonDispatcher, builder: $this.builder, title: $this.title, onGenerateTitle: $this.onGenerateTitle, color: $this.color, theme: $this.theme, locale: $this.locale, localizationsDelegates: $this.localizationsDelegates, localeListResolutionCallback: $this.localeListResolutionCallback, localeResolutionCallback: $this.localeResolutionCallback, supportedLocales: $this.supportedLocales, showPerformanceOverlay: $this.showPerformanceOverlay, checkerboardRasterCacheImages: $this.checkerboardRasterCacheImages, checkerboardOffscreenLayers: $this.checkerboardOffscreenLayers, showSemanticsDebugger: $this.showSemanticsDebugger, debugShowCheckedModeBanner: $this.debugShowCheckedModeBanner, shortcuts: $this.shortcuts, actions: $this.actions, restorationScopeId: $this.restorationScopeId, routeInformationParser: modular_base._routeInformationParser, routerDelegate: modular_base._routerDelegate, $creationLocationd_0dea112b090073317d4: C[75] || CT.C75});
    return app;
  };
  modular_base['ModularExtensionCupertino|get#modular'] = function ModularExtensionCupertino$124get$35modular($this) {
    if ($this == null) dart.nullFailed(I[33], 78, 16, "#this");
    return dart.fn(() => modular_base['ModularExtensionCupertino|modular']($this), T$.VoidToCupertinoApp());
  };
  dart.copyProperties(modular_base, {
    get _routeInformationParser() {
      let t22, t21;
      t21 = modular_base['_#_routeInformationParser'];
      return t21 == null ? (t22 = new modular_route_information_parser.ModularRouteInformationParser.new(), modular_base['_#_routeInformationParser'] == null ? modular_base['_#_routeInformationParser'] = t22 : dart.throw(new _internal.LateError.fieldADI("_routeInformationParser"))) : t21;
    },
    get _routerDelegate() {
      let t22, t21;
      t21 = modular_base['_#_routerDelegate'];
      return t21 == null ? (t22 = new modular_router_delegate.ModularRouterDelegate.new(modular_base._routeInformationParser, modular_base._injectMap), modular_base['_#_routerDelegate'] == null ? modular_base['_#_routerDelegate'] = t22 : dart.throw(new _internal.LateError.fieldADI("_routerDelegate"))) : t21;
    }
  });
  dart.defineLazy(modular_base, {
    /*modular_base._modularFlags*/get _modularFlags() {
      return new modular_base.ModularFlags.new();
    },
    /*modular_base._injectMap*/get _injectMap() {
      return new (T$.IdentityMapOfString$Module()).new();
    },
    /*modular_base['_#_routeInformationParser']*/get ['_#_routeInformationParser']() {
      return null;
    },
    set ['_#_routeInformationParser'](_) {},
    /*modular_base['_#_routeInformationParser#isSet']*/get ['_#_routeInformationParser#isSet']() {
      return false;
    },
    set ['_#_routeInformationParser#isSet'](_) {},
    /*modular_base['_#_routerDelegate']*/get ['_#_routerDelegate']() {
      return null;
    },
    set ['_#_routerDelegate'](_) {},
    /*modular_base['_#_routerDelegate#isSet']*/get ['_#_routerDelegate#isSet']() {
      return false;
    },
    set ['_#_routerDelegate#isSet'](_) {},
    /*modular_base.Modular*/get Modular() {
      return new modular_impl.ModularImpl.new({routerDelegate: modular_base._routerDelegate, injectMap: modular_base._injectMap, flags: modular_base._modularFlags});
    },
    /*modular_base.initialRouteDeclaratedInMaterialApp*/get initialRouteDeclaratedInMaterialApp() {
      return "/";
    },
    set initialRouteDeclaratedInMaterialApp(_) {}
  }, false);
  var inject$ = dart.privateName(bind$, "Bind.inject");
  var isSingleton$ = dart.privateName(bind$, "Bind.isSingleton");
  var $export$ = dart.privateName(bind$, "Bind.export");
  var isLazy$ = dart.privateName(bind$, "Bind.isLazy");
  const _is_Bind_default = Symbol('_is_Bind_default');
  bind$.Bind$ = dart.generic(T => {
    class Bind extends core.Object {
      get inject() {
        return this[inject$];
      }
      set inject(value) {
        super.inject = value;
      }
      get isSingleton() {
        return this[isSingleton$];
      }
      set isSingleton(value) {
        super.isSingleton = value;
      }
      get export() {
        return this[$export$];
      }
      set export(value) {
        super.export = value;
      }
      get isLazy() {
        return this[isLazy$];
      }
      set isLazy(value) {
        super.isLazy = value;
      }
      static instance(T, instance, opts) {
        if (instance == null) dart.nullFailed(I[35], 19, 47, "instance");
        let $export = opts && 'export' in opts ? opts.export : false;
        if ($export == null) dart.nullFailed(I[35], 19, 63, "export");
        return new (bind$.Bind$(T)).new(dart.fn(i => {
          if (i == null) dart.nullFailed(I[35], 20, 21, "i");
          return instance;
        }, dart.fnType(T, [inject.Inject])), {isSingleton: false, isLazy: true, export: $export});
      }
      static singleton(T, inject, opts) {
        if (inject == null) dart.nullFailed(I[35], 26, 67, "inject");
        let $export = opts && 'export' in opts ? opts.export : false;
        if ($export == null) dart.nullFailed(I[35], 26, 81, "export");
        return new (bind$.Bind$(T)).new(inject, {isSingleton: true, isLazy: false, export: $export});
      }
      static lazySingleton(T, inject, opts) {
        if (inject == null) dart.nullFailed(I[35], 33, 71, "inject");
        let $export = opts && 'export' in opts ? opts.export : false;
        if ($export == null) dart.nullFailed(I[35], 33, 85, "export");
        return new (bind$.Bind$(T)).new(inject, {isSingleton: true, isLazy: true, export: $export});
      }
      static factory(T, inject, opts) {
        if (inject == null) dart.nullFailed(I[35], 38, 65, "inject");
        let $export = opts && 'export' in opts ? opts.export : false;
        if ($export == null) dart.nullFailed(I[35], 38, 79, "export");
        return new (bind$.Bind$(T)).new(inject, {isSingleton: false, isLazy: true, export: $export});
      }
    }
    (Bind.new = function(inject, opts) {
      if (inject == null) dart.nullFailed(I[35], 16, 13, "inject");
      let isSingleton = opts && 'isSingleton' in opts ? opts.isSingleton : true;
      if (isSingleton == null) dart.nullFailed(I[35], 16, 27, "isSingleton");
      let isLazy = opts && 'isLazy' in opts ? opts.isLazy : true;
      if (isLazy == null) dart.nullFailed(I[35], 16, 52, "isLazy");
      let $export = opts && 'export' in opts ? opts.export : false;
      if ($export == null) dart.nullFailed(I[35], 16, 72, "export");
      this[inject$] = inject;
      this[isSingleton$] = isSingleton;
      this[isLazy$] = isLazy;
      this[$export$] = $export;
      if (!(dart.test(isSingleton) || dart.test(isLazy))) dart.assertFailed("'singleton' can't be false if 'lazy' is also false", I[35], 16, 98, "(isSingleton || isLazy)");
      ;
    }).prototype = Bind.prototype;
    dart.addTypeTests(Bind);
    Bind.prototype[_is_Bind_default] = true;
    dart.addTypeCaches(Bind);
    dart.setLibraryUri(Bind, I[36]);
    dart.setFieldSignature(Bind, () => ({
      __proto__: dart.getFields(Bind.__proto__),
      inject: dart.finalFieldType(dart.fnType(T, [inject.Inject])),
      isSingleton: dart.finalFieldType(core.bool),
      export: dart.finalFieldType(core.bool),
      isLazy: dart.finalFieldType(core.bool)
    }));
    return Bind;
  });
  bind$.Bind = bind$.Bind$();
  dart.addTypeTests(bind$.Bind, _is_Bind_default);
  var inject$0 = dart.privateName(bind$, "BindInject.inject");
  var isSingleton$0 = dart.privateName(bind$, "BindInject.isSingleton");
  var isLazy$0 = dart.privateName(bind$, "BindInject.isLazy");
  const _is_BindInject_default = Symbol('_is_BindInject_default');
  bind$.BindInject$ = dart.generic(T => {
    class BindInject extends bind$.Bind$(T) {
      get inject() {
        return this[inject$0];
      }
      set inject(value) {
        super.inject = value;
      }
      get isSingleton() {
        return this[isSingleton$0];
      }
      set isSingleton(value) {
        super.isSingleton = value;
      }
      get isLazy() {
        return this[isLazy$0];
      }
      set isLazy(value) {
        super.isLazy = value;
      }
    }
    (BindInject.new = function(inject, opts) {
      if (inject == null) dart.nullFailed(I[35], 53, 19, "inject");
      let isSingleton = opts && 'isSingleton' in opts ? opts.isSingleton : true;
      if (isSingleton == null) dart.nullFailed(I[35], 53, 33, "isSingleton");
      let isLazy = opts && 'isLazy' in opts ? opts.isLazy : true;
      if (isLazy == null) dart.nullFailed(I[35], 53, 58, "isLazy");
      this[inject$0] = inject;
      this[isSingleton$0] = isSingleton;
      this[isLazy$0] = isLazy;
      BindInject.__proto__.new.call(this, inject, {isSingleton: isSingleton, isLazy: isLazy});
      ;
    }).prototype = BindInject.prototype;
    dart.addTypeTests(BindInject);
    BindInject.prototype[_is_BindInject_default] = true;
    dart.addTypeCaches(BindInject);
    dart.setLibraryUri(BindInject, I[36]);
    dart.setFieldSignature(BindInject, () => ({
      __proto__: dart.getFields(BindInject.__proto__),
      inject: dart.finalFieldType(dart.fnType(T, [inject.Inject])),
      isSingleton: dart.finalFieldType(core.bool),
      isLazy: dart.finalFieldType(core.bool)
    }));
    return BindInject;
  });
  bind$.BindInject = bind$.BindInject$();
  dart.addTypeTests(bind$.BindInject, _is_BindInject_default);
  bind$.BindEmpty = class BindEmpty extends bind$.Bind$(core.Object) {};
  (bind$.BindEmpty.new = function() {
    bind$.BindEmpty.__proto__.new.call(this, dart.fn(e => {
      if (e == null) dart.nullFailed(I[35], 57, 24, "e");
      return new core.Object.new();
    }, T$.InjectToObject()));
    ;
  }).prototype = bind$.BindEmpty.prototype;
  dart.addTypeTests(bind$.BindEmpty);
  dart.addTypeCaches(bind$.BindEmpty);
  dart.setLibraryUri(bind$.BindEmpty, I[36]);
  var typesInRequest$ = dart.privateName(inject, "Inject.typesInRequest");
  var overrideBinds$ = dart.privateName(inject, "Inject.overrideBinds");
  const _is_Inject_default = Symbol('_is_Inject_default');
  inject.Inject$ = dart.generic(T => {
    class Inject extends core.Object {
      get typesInRequest() {
        return this[typesInRequest$];
      }
      set typesInRequest(value) {
        super.typesInRequest = value;
      }
      get overrideBinds() {
        return this[overrideBinds$];
      }
      set overrideBinds(value) {
        super.overrideBinds = value;
      }
      call(B, bind = null) {
        return this.get(B, bind);
      }
      get(B, bind = null) {
        let t21, t21$, t21$0, t21$1;
        if (bind == null) {
          return modular_base.Modular.get(B, {typesInRequestList: this.typesInRequest});
        } else {
          let candidateId = (t21$ = (t21 = this.overrideBinds, t21 == null ? null : t21[$indexWhere](dart.fn(element => {
            if (element == null) dart.nullFailed(I[37], 18, 54, "element");
            return dart.equals(dart.runtimeType(element), dart.runtimeType(bind));
          }, T$.BindOfObjectTobool()))), t21$ == null ? -1 : t21$);
          if (candidateId === -1) {
            t21$0 = bind;
            return t21$0.inject(this);
          } else {
            return B.as((t21$1 = dart.nullCheck(this.overrideBinds)[$_get](candidateId), t21$1.inject(this)));
          }
        }
      }
      get args() {
        return modular_base.Modular.args;
      }
      dispose(B) {
        return modular_base.Modular.dispose(B);
      }
    }
    (Inject.new = function(opts) {
      let typesInRequest = opts && 'typesInRequest' in opts ? opts.typesInRequest : null;
      let overrideBinds = opts && 'overrideBinds' in opts ? opts.overrideBinds : C[100] || CT.C100;
      this[typesInRequest$] = typesInRequest;
      this[overrideBinds$] = overrideBinds;
      ;
    }).prototype = Inject.prototype;
    dart.addTypeTests(Inject);
    Inject.prototype[_is_Inject_default] = true;
    dart.addTypeCaches(Inject);
    dart.setMethodSignature(Inject, () => ({
      __proto__: dart.getMethods(Inject.__proto__),
      call: dart.gFnType(B => [B, [], [dart.nullable(bind$.Bind$(B))]], B => [core.Object]),
      get: dart.gFnType(B => [B, [], [dart.nullable(bind$.Bind$(B))]], B => [core.Object]),
      dispose: dart.gFnType(B => [core.bool, []], B => [core.Object])
    }));
    dart.setGetterSignature(Inject, () => ({
      __proto__: dart.getGetters(Inject.__proto__),
      args: dart.nullable(modular_arguments.ModularArguments)
    }));
    dart.setLibraryUri(Inject, I[38]);
    dart.setFieldSignature(Inject, () => ({
      __proto__: dart.getFields(Inject.__proto__),
      typesInRequest: dart.finalFieldType(dart.nullable(core.List$(core.Type))),
      overrideBinds: dart.finalFieldType(dart.nullable(core.List$(bind$.Bind$(core.Object))))
    }));
    return Inject;
  });
  inject.Inject = inject.Inject$();
  dart.addTypeTests(inject.Inject, _is_Inject_default);
  modular_route.TransitionType = class TransitionType extends core.Object {
    toString() {
      return this[_name$];
    }
  };
  (modular_route.TransitionType.new = function(index, _name) {
    if (index == null) dart.nullFailed(I[39], 246, 6, "index");
    if (_name == null) dart.nullFailed(I[39], 246, 6, "_name");
    this.index = index;
    this[_name$] = _name;
    ;
  }).prototype = modular_route.TransitionType.prototype;
  dart.addTypeTests(modular_route.TransitionType);
  dart.addTypeCaches(modular_route.TransitionType);
  dart.setLibraryUri(modular_route.TransitionType, I[11]);
  dart.setFieldSignature(modular_route.TransitionType, () => ({
    __proto__: dart.getFields(modular_route.TransitionType.__proto__),
    index: dart.finalFieldType(core.int),
    [_name$]: dart.finalFieldType(core.String)
  }));
  dart.defineExtensionMethods(modular_route.TransitionType, ['toString']);
  modular_route.TransitionType.defaultTransition = C[7] || CT.C7;
  modular_route.TransitionType.fadeIn = C[101] || CT.C101;
  modular_route.TransitionType.noTransition = C[102] || CT.C102;
  modular_route.TransitionType.rightToLeft = C[103] || CT.C103;
  modular_route.TransitionType.leftToRight = C[104] || CT.C104;
  modular_route.TransitionType.upToDown = C[105] || CT.C105;
  modular_route.TransitionType.downToUp = C[106] || CT.C106;
  modular_route.TransitionType.scale = C[107] || CT.C107;
  modular_route.TransitionType.rotate = C[108] || CT.C108;
  modular_route.TransitionType.size = C[109] || CT.C109;
  modular_route.TransitionType.rightToLeftWithFade = C[110] || CT.C110;
  modular_route.TransitionType.leftToRightWithFade = C[111] || CT.C111;
  modular_route.TransitionType.custom = C[112] || CT.C112;
  modular_route.TransitionType.values = C[113] || CT.C113;
  dart.trackLibraries("packages/flutter_modular/src/presenters/widgets/widget_module.dart", {
    "package:flutter_modular/src/presenters/widgets/widget_module.dart": widget_module,
    "package:flutter_modular/src/presenters/widgets/navigation_listener.dart": navigation_listener,
    "package:flutter_modular/src/presenters/widgets/modular_state.dart": modular_state,
    "package:flutter_modular/src/presenters/widgets/modular_app.dart": modular_app,
    "package:flutter_modular/src/core/models/wildcard_route.dart": wildcard_route,
    "package:flutter_modular/src/core/models/module_route.dart": module_route,
    "package:flutter_modular/src/presenters/transitions/transitions.dart": transitions$,
    "package:flutter_modular/src/presenters/modular_route_impl.dart": modular_route_impl,
    "package:flutter_modular/src/core/models/child_route.dart": child_route,
    "package:flutter_modular/src/core/interfaces/route_guard.dart": route_guard,
    "package:flutter_modular/src/presenters/navigation/router_outlet_delegate.dart": router_outlet_delegate,
    "package:flutter_modular/src/presenters/navigation/modular_route_information_parser.dart": modular_route_information_parser,
    "package:flutter_modular/src/presenters/navigation/modular_page.dart": modular_page,
    "package:flutter_modular/src/presenters/navigation/custom_navigator.dart": custom_navigator,
    "package:flutter_modular/src/presenters/navigation/modular_router_delegate.dart": modular_router_delegate,
    "package:flutter_modular/src/presenters/modular_impl.dart": modular_impl,
    "package:flutter_modular/src/core/interfaces/modular_interface.dart": modular_interface,
    "package:flutter_modular/src/presenters/modular_base.dart": modular_base,
    "package:flutter_modular/src/core/models/bind.dart": bind$,
    "package:flutter_modular/src/presenters/inject.dart": inject,
    "package:flutter_modular/src/core/interfaces/module.dart": module,
    "package:flutter_modular/src/core/interfaces/modular_route.dart": modular_route,
    "package:flutter_modular/flutter_modular.dart": flutter_modular
  }, {
  }, '{"version":3,"sourceRoot":"","sources":["widget_module.dart","../../core/interfaces/module.dart","navigation_listener.dart","modular_state.dart","modular_app.dart","../../core/interfaces/modular_route.dart","../modular_route_impl.dart","../../core/models/wildcard_route.dart","../../core/models/module_route.dart","../transitions/transitions.dart","../../core/models/child_route.dart","../../core/interfaces/route_guard.dart","../navigation/router_outlet_delegate.dart","../navigation/modular_route_information_parser.dart","../navigation/modular_page.dart","../navigation/custom_navigator.dart","../navigation/modular_router_delegate.dart","../modular_impl.dart","../../core/interfaces/modular_interface.dart","../modular_base.dart","../../core/models/bind.dart","../inject.dart"],"names":[],"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","file":"../../../../../../../../../../packages/flutter_modular/src/presenters/widgets/widget_module.dart.lib.js"}');
  // Exports:
  return {
    src__presenters__widgets__widget_module: widget_module,
    src__presenters__widgets__navigation_listener: navigation_listener,
    src__presenters__widgets__modular_state: modular_state,
    src__presenters__widgets__modular_app: modular_app,
    src__core__models__wildcard_route: wildcard_route,
    src__core__models__module_route: module_route,
    src__presenters__transitions__transitions: transitions$,
    src__presenters__modular_route_impl: modular_route_impl,
    src__core__models__child_route: child_route,
    src__core__interfaces__route_guard: route_guard,
    src__presenters__navigation__router_outlet_delegate: router_outlet_delegate,
    src__presenters__navigation__modular_route_information_parser: modular_route_information_parser,
    src__presenters__navigation__modular_page: modular_page,
    src__presenters__navigation__custom_navigator: custom_navigator,
    src__presenters__navigation__modular_router_delegate: modular_router_delegate,
    src__presenters__modular_impl: modular_impl,
    src__core__interfaces__modular_interface: modular_interface,
    src__presenters__modular_base: modular_base,
    src__core__models__bind: bind$,
    src__presenters__inject: inject,
    src__core__interfaces__module: module,
    src__core__interfaces__modular_route: modular_route,
    flutter_modular: flutter_modular
  };
}));

//# sourceMappingURL=widget_module.dart.lib.js.map
